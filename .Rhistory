strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF"),
panel.spacing = unit(2, "lines")
)
ggplotly(INDUSCAPCHANGEaggr)
## Count
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat) %>%
pivot_longer(Topic, n, by=c(Steel_, Cement_, Dairy_, Chemical_, Paper_, Meat)) %>%
select(Subsection, Topic, n) %>%
mutate(Subsection2 = paste(substr(Subsection, 1, 30), "[...]")) %>%
#Plot
ggplot(aes(x=Topic, y=n)) +
geom_bar(aes(fill=Subsection2), position="stack", stat = "identity" ) +
theme_bw() +
scale_fill_paletteer_d(jcolors, rainbow) +
theme(
axis.text.x = element_text(angle = 60, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Count of EU lobby",
subtitle = "Filtered on REINVENT sectors ",
y = "Number of organisations", x = "Subsection", caption = "\nSource: EU Transparency Register") +
guides(fill=element_text("Category"))
########################################################################################
## Database
########################################################################################
# Source: http://ec.europa.eu/transparencyregister/public/consultation/search.do?locale=en&reset=
REINVENTthemed = read.csv("data/EURegistery_REINVENT_filter_2019-03-09.csv", dec=".", sep=",")
########################################################################################
##  Plotting
########################################################################################
## Count
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat) %>%
pivot_longer(Topic, n, by=c(Steel_, Cement_, Dairy_, Chemical_, Paper_, Meat)) %>%
select(Subsection, Topic, n) %>%
mutate(Subsection2 = paste(substr(Subsection, 1, 30), "[...]")) %>%
#Plot
ggplot(aes(x=Topic, y=n)) +
geom_bar(aes(fill=Subsection2), position="stack", stat = "identity" ) +
theme_bw() +
scale_fill_paletteer_d(jcolors, rainbow) +
theme(
axis.text.x = element_text(angle = 60, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Count of EU lobby",
subtitle = "Filtered on REINVENT sectors ",
y = "Number of organisations", x = "Subsection", caption = "\nSource: EU Transparency Register") +
guides(fill=element_text("Category"))
?pivot_longer
?gather
########################################################################################
## Database
########################################################################################
# Source: http://ec.europa.eu/transparencyregister/public/consultation/search.do?locale=en&reset=
REINVENTthemed = read.csv("data/EURegistery_REINVENT_filter_2019-03-09.csv", dec=".", sep=",")
########################################################################################
##  Plotting
########################################################################################
## Count
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat) %>%
pivot_longer(Topic, n, c(Steel_, Cement_, Dairy_, Chemical_, Paper_, Meat)) %>%
select(Subsection, Topic, n) %>%
mutate(Subsection2 = paste(substr(Subsection, 1, 30), "[...]")) %>%
#Plot
ggplot(aes(x=Topic, y=n)) +
geom_bar(aes(fill=Subsection2), position="stack", stat = "identity" ) +
theme_bw() +
scale_fill_paletteer_d(jcolors, rainbow) +
theme(
axis.text.x = element_text(angle = 60, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Count of EU lobby",
subtitle = "Filtered on REINVENT sectors ",
y = "Number of organisations", x = "Subsection", caption = "\nSource: EU Transparency Register") +
guides(fill=element_text("Category"))
REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat)
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat)
REINVENTthemedcountSector
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat) %>%
pivot_longer("Topic", "n", c(Steel_, Cement_, Dairy_, Chemical_, Paper_, Meat))
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat) %>%
pivot_longer( c(Steel_, Cement_, Dairy_, Chemical_, Paper_, Meat), "Topic", "n")
REINVENTthemedcountSector
## Count
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat) %>%
pivot_longer( c(Steel_, Cement_, Dairy_, Chemical_, Paper_, Meat), "Topic", "n") %>%
select(Subsection, Topic, n) %>%
mutate(Subsection2 = paste(substr(Subsection, 1, 30), "[...]")) %>%
#Plot
ggplot(aes(x=Topic, y=n)) +
geom_bar(aes(fill=Subsection2), position="stack", stat = "identity" ) +
theme_bw() +
scale_fill_paletteer_d(jcolors, rainbow) +
theme(
axis.text.x = element_text(angle = 60, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Count of EU lobby",
subtitle = "Filtered on REINVENT sectors ",
y = "Number of organisations", x = "Subsection", caption = "\nSource: EU Transparency Register") +
guides(fill=element_text("Category"))
## Count
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat) %>%
pivot_longer( c(Steel_, Cement_, Dairy_, Chemical_, Paper_, Meat), names_to = "Topic", values_to =  "n") %>%
select(Subsection, Topic, n) %>%
mutate(Subsection2 = paste(substr(Subsection, 1, 30), "[...]")) %>%
#Plot
ggplot(aes(x=Topic, y=n)) +
geom_bar(aes(fill=Subsection2), position="stack", stat = "identity" ) +
theme_bw() +
scale_fill_paletteer_d(jcolors, rainbow) +
theme(
axis.text.x = element_text(angle = 60, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Count of EU lobby",
subtitle = "Filtered on REINVENT sectors ",
y = "Number of organisations", x = "Subsection", caption = "\nSource: EU Transparency Register") +
guides(fill=element_text("Category"))
library(paletteer)
## Count
REINVENTthemedcountSector = REINVENTthemed %>%
group_by(Subsection, Topic) %>%
count() %>%
# Mutate
spread(Topic, n) %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
mutate(Steel_=Steel+Metallurgy+Metal, Cement_=Cement+Mortar, Dairy_=Dairy+Milk, Chemical_=Chemical+Plastic+Ethylene, Paper_=Pulp+Paper, Meat=Meat) %>%
pivot_longer( c(Steel_, Cement_, Dairy_, Chemical_, Paper_, Meat), names_to = "Topic", values_to =  "n") %>%
select(Subsection, Topic, n) %>%
mutate(Subsection2 = paste(substr(Subsection, 1, 30), "[...]")) %>%
#Plot
ggplot(aes(x=Topic, y=n)) +
geom_bar(aes(fill=Subsection2), position="stack", stat = "identity" ) +
theme_bw() +
scale_fill_paletteer_d(jcolors, rainbow) +
theme(
axis.text.x = element_text(angle = 60, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Count of EU lobby",
subtitle = "Filtered on REINVENT sectors ",
y = "Number of organisations", x = "Subsection", caption = "\nSource: EU Transparency Register") +
guides(fill=element_text("Category"))
print(REINVENTthemedcountSector)
# Soc Media API readers
library(rtweet)
#install.packages("readxl")
library("readxl")
# plotting and pipes!
library(ggplot2)
library(patchwork)
library(dplyr)
library(tidyr)
library(data.table)
library(paletteer)
library(ggrepel)
library(igraph)
library(ggraph)
library(ggforce)
# text mining library
library(tidytext)
library(tm)
# coupled words analysis
library(widyr)
theme_set(
theme_bw()
)
# Analyse
REINVENTzoom = REINVENTthemed %>%
rename("Description"="Goals...remit",
"Keywords"="Fields.of.interest") %>%
group_by(Topic) %>%
unnest_tokens(paired_words, Keywords, token="ngrams", n=2) %>%
#count
count(paired_words, sort=TRUE) %>%
# split
separate(paired_words, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% c(stop_words$word, "https", "t.co")) %>%
filter(!word2 %in% c(stop_words$word, "https", "t.co"))  %>%
filter(n >= 2) %>%
#fct_explicit_na( na_level = "NA") %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), colour="lightblue") +
geom_node_point(colour="blue", size = 3) +
geom_node_text(aes(label = name), vjust = 1.8, size=3, repel=T) +
labs(title = "Word Network of Industries and their Field of Interest",
subtitle = "",
x = "", y = "", caption = "\nSource: EU Transparancy Register") +
theme_bw()
print(REINVENTzoom)
########################################################################################
## API set-up (Fill in yourself)
########################################################################################
token <- create_token(
app = "",
consumer_key = "XsUTxqZNWovUgkNsFctSasLb7",
consumer_secret = "XKg0X52FKVEPMBh4lvMIJZaD0qVuj56vaaPLhsWsJ03xLiZnpD",
access_token = '3092191180-6hcwjXBiyE7SVoHmCUVHOrr5kdi0pgYxIKq0YM6',
access_secret = 'N6Fk8IZFyE0F4RTWRFoIjFieMNDUS8M162imYoYipgS50')
########################################################################################
## Your analysis input
########################################################################################
Date <-Sys.Date()
TopicSearch <- c("CEFIC", "CEPI_Paper", "CEMBUREAU", "EUROFER_eu")
GreenTweet <- c("EII", "EULTS", "ClimateNeutralEU")
stop_words_nl=tibble(word=stopwords("dutch"))
stop_words_du=tibble(word=stopwords("german"))
########################################################################################
##########################################################################
### Pull recent tweets (7 days)
##########################################################################
Pull_tweets  <- lapply(TopicSearch, function(i) {
Tweets <- search_tweets(q = i,
n = 500)
Tweets$Keyword <- i
Tweets = data.table(Tweets)
})
Pull_tweets_list <- rbindlist(Pull_tweets)
## Save to csv
#save_as_csv(Pull_tweets_list, paste("Pull_tweets_list_", Date, " .csv", sep=""), prepend_ids = TRUE, na = "", fileEncoding = "UTF-8")
##########################################################################
### Show timeline
##########################################################################
## plot time series (if ggplot2 is installed)
TIMELINE = Pull_tweets_list  %>%
#Filter
group_by(Keyword) %>%
filter(is_retweet==F ) %>%
#Plot
ts_plot(size=1) +
theme_bw()+
theme(text = element_text(size=15),
strip.text.x = element_text(size=13, face="bold"),
strip.background = element_rect(colour="white", fill="#FFFFFF"),
panel.border = element_rect(colour = "black", size=2),
legend.title = element_text(face="bold"),
legend.text = element_text(size=16))+
labs(
title = "Number of tweets per keyword",
subtitle = "Tweets collected, parsed, and plotted using `rtweet`") +
scale_color_paletteer_d(jcolors, rainbow)
print(TIMELINE)
##########################################################################
######### Analyse words in last 7 days
##########################################################################
COUNTALL = Pull_tweets_list  %>%
# Filter out all tweets with mention of Green Tweets
#filter(grepl(paste(GreenTweet, collapse="|"), text)) %>%
group_by(Keyword) %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
# Clean up text
anti_join(stop_words) %>%
filter(!word %in% c("t.co", "report", "https", tolower(TopicSearch), "eu", "de", "amp", "role")) %>%
top_n(10) %>%
## reordering
group_by(word) %>%
mutate(word_sum=sum(n)) %>%
ungroup()%>%
mutate(word = reorder(word, word_sum)) %>%
ggplot(aes(x = word, y = n)) +
geom_col(aes( fill=Keyword), colour="black") +
theme_bw() +
scale_color_paletteer_d(jcolors, rainbow) +
coord_flip() +
scale_fill_paletteer_d(quickpalette, dreaming) +
guides(fill=guide_legend("Keyword")) +
theme(text = element_text(size=15),
strip.text.x = element_text(size=12, face="bold"),
strip.background = element_rect(colour="white", fill="#FFFFFF"),
panel.border = element_rect(colour = "black", size=2),
legend.title = element_text(face="bold"),
legend.text = element_text(size=16))+
labs(y = "Number of times used",
x = "Unique words",
title = paste("Count of unique words in tweets", sep=""),
subtitle=paste("[", Date, " snapshot]", sep=""))
print(COUNTALL)
# Compile overview plot (using patvhwork devtools::install_github("thomasp85/patchwork"))
# OVERVIEW = TIMELINE + COUNTALL +  plot_layout(ncol =1, heights = c(1, 2))
# print(OVERVIEW)
##########################################################################
#### Accounts tweeting on business associations' green tweets:
##########################################################################
COUNTGREEN = Pull_tweets_list  %>%
#filter(grepl(paste(GreenTweet, collapse="|"), text)) %>%
group_by(Keyword) %>%
#unnest_tokens(word, text) %>%
count(screen_name) %>%
top_n(10) %>%
ungroup() %>%
# reordering
group_by(screen_name) %>%
mutate(screen_name_sum=sum(n)) %>%
ungroup()%>%
mutate(screen_name = reorder(screen_name, screen_name_sum)) %>%
#Filter more
filter(!n <= 1) %>%
#plotting
ggplot(aes(x = screen_name, y = n)) +
geom_col(aes( fill=Keyword), colour="black") +
theme_bw() +
scale_color_paletteer_d(jcolors, rainbow) +
coord_flip() +
scale_fill_paletteer_d(quickpalette, dreaming) +
guides(fill=guide_legend("Keyword")) +
theme(text = element_text(size=15),
strip.text.x = element_text(size=12, face="bold"),
strip.background = element_rect(colour="white", fill="#FFFFFF"),
panel.border = element_rect(colour = "black", size=2),
legend.title = element_text(face="bold"),
legend.text = element_text(size=16))+
labs(y = "Number of times used",
x = "Unique words",
title = paste("Count of Tweets per Tweeting person [", Date, " snapshot]", sep=""),
subtitle=paste("Filtered on:", paste(GreenTweet, collapse=",")))
############################################################################
### Which accounts are they following & are most influential (followers count)
## get user IDs of accounts followed by CNN
Friends_EUBusAss <- get_friends(TopicSearch)
## lookup data on those accounts
Friends_EUBusAss_twitter_handles <- lookup_users(Friends_EUBusAss$user_id)
########################################################################
######### Following these associations
## It is limited in how many calls you an make??
Following_me_EUBusAss  <- lapply(TopicSearch, function(i) {
List <- get_followers(i, n=500)
List=data.table(List)
List$user <- i
List=data.table(List)
})
################################
### PLUCKING TIMELINES
## Pull Twitter timelines
Pluck_tweets  <- lapply(TopicSearch, function(i) {
List <- get_timeline(i, n = 2000, parse=T)
List$Keyword <- i
List = data.table(List)
})
Pluck_tweets_list <- do_call_rbind(Pluck_tweets)
Pluck_tweets_list$plain <- plain_tweets(Pluck_tweets_list$text)
################################
######### Network analysis
NETWORK_TML = Pluck_tweets_list %>%
mutate(Year=as.numeric(substr(created_at, 1,4))) %>%
# find paired words
group_by(Keyword) %>%
select(Keyword, plain, followers_count, Year) %>%
unnest_tokens(paired_words, plain, token="ngrams", n=2) %>%
#count
count(paired_words, sort=TRUE) %>%
# split
separate(paired_words, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% c(stop_words$word, stop_words_nl$word, stop_words_du$word,"https", "t.co")) %>%
filter(!word2 %in% c(stop_words$word, "https", "t.co"))
# new count: dont know why you would do this???
#count(word1, word2, sort = TRUE)
# plot
NETWORKPLOT2 = NETWORK_TML %>%
group_by(Keyword) %>%
filter(n >= 10) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), colour="lightblue") +
geom_node_point(colour="blue", size = 3) +
geom_node_text(aes(label = name), vjust = 1.8, size = 3) +
labs(title = "Word Network of Timeline Tweets",
subtitle = "Text mining twitter data ",
x = "", y = "", caption = "\nSource: Data collected from Twitter's REST API via rtweet") +
theme_bw()
#ggsave(paste("Word_Network_Timeline_tweets_Industry_", Date,".png", sep=""), width = 10, height = 7, units = c("in"), dpi=300)
print(NETWORKPLOT2)
setwd("E:/UU/R/github/marieyesse.github.io")
setwd("E:/UU/R/Resume/cv-master")
"Hey gurl" %>%
make_dotted_message() %>%
make_bridges_from_seed() %>%
meander(bridge = ., palette = rainbow)
setwd("F:/UU/R/github/marieyesse.github.io")
setwd("F:/UU/R/github/marieyesse.github.io")
setwd("F:/UU/R/Resume/cv-master")
