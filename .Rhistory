theme_bw()
)
ALLFILES <-list.files(path = "roadmaps")
setwd("/mnt/y/Kennisbasis/IMAGE/model/users/mariesse/R/REINVENT_roadmaps/roadmaps")
PDFCorpus <- lapply(ALLFILES, function(x){extract_text(x)})
?tm_map
PDFCorpus.df = data.frame(text = sapply(PDFCorpusdatanapunct, as.character), stringsAsFactors = FALSE) %>%
mutate(Prepared.by=substr(ALLFILES,1,10)) %>%
mutate(text=(gsub("\n","", text)))
PDFCorpus.df = data.frame(text = sapply(PDFCorpus, as.character), stringsAsFactors = FALSE) %>%
mutate(Prepared.by=substr(ALLFILES,1,10)) %>%
mutate(text=(gsub("\n","", text)))
PDFCorpus.df = data.frame(text = sapply(PDFCorpus, as.character), stringsAsFactors = FALSE) %>%
mutate(Prepared.by=substr(ALLFILES,1,10)) %>%
mutate(text=(gsub("\n","", text))) %>%
filter(!text %in% c(stop_words$word)) %>%
PDFCorpus.df= merge(PDFCorpus.df, AFTER2016dat, c("Prepared.by"))
PDFCorpus.df = data.frame(text = sapply(PDFCorpus, as.character), stringsAsFactors = FALSE) %>%
mutate(Prepared.by=substr(ALLFILES,1,10)) %>%
mutate(text=(gsub("\n","", text))) %>%
filter(!text %in% c(stop_words$word))
PDFCorpus.df= merge(PDFCorpus.df, AFTER2016dat, c("Prepared.by"))
########################################################################################################################
########################################################################################################################
# Clear memory
rm(list=ls()) # clear memory
# Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Required packages
### If not yet availabe, use install.packages("")
# Soc Media API readers
library(rtweet)
#install.packages("readxl")
library("readxl")
# plotting and pipes!
library(ggplot2)
library(ggforce)
library(plotly)
library(patchwork)
library(dplyr)
library(tidyr)
library(data.table)
library(paletteer)
library(ggrepel)
library(igraph)
library(ggraph)
library(ggforce)
# text mining library
library(tidytext)
library(tm)
library(stringr)
library(pdftools) ## Needs specific Linux install
library(tabulizer) # doesnt
# coupled words analysis
library(widyr)
#install.packages("readxl")
library("readxl")
theme_set(
theme_bw()
)
########################################################################################
## Database
########################################################################################
BEFORE2016 <- c( "literature_overview_before_2016.xlsx")
BEFORE2016dat <- read_excel(BEFORE2016, skip=6)
BEFORE2016dat=data.table(BEFORE2016dat)
BEFORE2016dat = BEFORE2016dat %>%  rename_all(make.names)
# Making groupings
BEFORE2016dat = BEFORE2016dat %>%
# On classification
mutate(Industry = ifelse(Steel %in% c("X"), "Steel",
ifelse(Paper %in% c("X"), "Paper",
ifelse(Plastics %in% c("X"), "Plastics",
ifelse(Food %in% c("X"), "Food", "Other")))),
Model=
case_when((Steel == "X" & Paper=="X" & Plastics == "X") ~ "Industry sector",
(Steel == "(X)" & Paper=="(X)" & Plastics == "(X)") ~ "Industry sector",
(Steel == "X" & Plastics == "X") ~ "Industry sector",  TRUE ~ "Other" ),
Focus = case_when(Model=="Industry sector" ~ Model, TRUE ~ Industry)) %>%
filter(!Focus =="Other") %>%
# On field
mutate(Field = case_when(grepl("scien", tolower(URL))|
grepl("doi", tolower(URL))|
grepl("mdpi", tolower(URL))|
grepl("univ", tolower(URL))|
grepl("eceee", tolower(URL))|
grepl("researchgate", tolower(URL)) ~ "Academic/Research",
grepl("cepi", tolower(URL))|
grepl("cefic", tolower(URL))|
grepl("eurofer", tolower(Prepared.by)) ~ "Business & Trade Assocation",
grepl("iea", tolower(Prepared.by))|
grepl("gov", tolower(URL))|
grepl("ipcc", tolower(URL))|
grepl("ec.euro", tolower(URL))  ~ "(Inter)Governmental",
grepl("bcg", tolower(URL))|
grepl("atkearney", tolower(URL)) ~  "Consultancy",
grepl("bellona", tolower(URL)) ~ "NGO",
TRUE ~ "Other"))
BEFORE2016dat$count <- 1
BEFORE2016dat$Year.of.publication <- as.numeric(BEFORE2016dat$Year.of.publication)
########## After 2016
AFTER2016 <- data.table(Study.title=c(list.files(path = "roadmaps")))
AFTER2016dat = AFTER2016 %>%
mutate(Year.of.publication= as.numeric(substr(gsub("[[:alpha:][:punct:][:space:]]", "", Study.title),1,4)),
Field = case_when(grepl("et_al", tolower(Study.title))|
grepl("doi", tolower(Study.title))|
grepl("mdpi", tolower(Study.title))|
grepl("univ", tolower(Study.title))|
grepl("eceee", tolower(Study.title))|
grepl("researchgate", tolower(Study.title)) ~ "Academic/Research",
grepl("cepi", tolower(Study.title))|
grepl("cefic", tolower(Study.title))|
grepl("vnci", tolower(Study.title))|
grepl("vnp", tolower(Study.title))|
grepl("cembureau", tolower(Study.title))|
grepl("eurofer", tolower(Study.title)) ~ "Business & Trade Assocation",
grepl("iea", tolower(Study.title))|
grepl("gov", tolower(Study.title))|
grepl("jrc", tolower(Study.title))|
grepl("decc", tolower(Study.title))|
grepl("ec_", tolower(Study.title))  ~ "(Inter)Governmental",
grepl("bcg", tolower(Study.title))|
grepl("tno", tolower(Study.title))|
grepl("berenschot", tolower(Study.title))|
grepl("mckinsey", tolower(Study.title))|
grepl("atkearney", tolower(Study.title)) ~  "Consultancy",
grepl("bellona", tolower(Study.title))|
grepl("wwf", tolower(Study.title))  ~ "NGO",
TRUE ~ "Other"),
Focus = case_when(grepl("steel", tolower(Study.title)) ~ "Steel",
grepl("plastic", tolower(Study.title))|
grepl("plastics", tolower(Study.title))|
grepl("cefic", tolower(Study.title))|
grepl("chemical", tolower(Study.title)) ~ "Plastics",
grepl("food", tolower(Study.title))|
grepl("meat", tolower(Study.title))|
grepl("dairy", tolower(Study.title)) ~ "Food",
grepl("cement", tolower(Study.title))|
grepl("cembureau", tolower(Study.title)) ~  "Cement",
grepl("paper", tolower(Study.title))|
grepl("ppi", tolower(Study.title))|
grepl("vnp", tolower(Study.title))|
grepl("pulp", tolower(Study.title)) ~ "Paper",
TRUE ~ "Industry sector"),
Prepared.by = substr(Study.title, 1, 10))
AFTER2016dat$count <- 1
############# Aggregating
AFTER2016dat=data.table(AFTER2016dat)
BEFORE2016dat=data.table(BEFORE2016dat)
ROADMAPSdat= rbind(BEFORE2016dat[,c("Study.title","Year.of.publication", "Prepared.by", "Focus", "Field", "count")],AFTER2016dat)
######## Timeline plotting
TIMELINEpretty_Focus = ROADMAPSdat  %>%
group_by(Year.of.publication) %>%
arrange(Focus) %>%
mutate(text_position=row_number(),
#odd and even numbers
location=ifelse(Year.of.publication %% 2, -1, 1)) %>%
mutate(text_y=(((count+(text_position*0.6))*location))+location) %>%
ggplot() +
geom_hline(yintercept = 0, colour="black")+
geom_hline(yintercept = 0, colour="black")+
# Grey line & point
geom_segment(aes(x=Year.of.publication, xend=Year.of.publication, yend=location*2), y=0, colour="grey80") +
geom_point(aes(x=Year.of.publication), y=0, size=3) +
# Timeline text
geom_text(aes(x=Year.of.publication, y=(location*0.7), label=Year.of.publication), hjust=0.5, size=4, fontface="bold") +
# fixed points
# geom_text(aes(x=2000, y=0.7, label=2000), hjust=0.5, size=4, fontface="bold") +
# geom_text(aes(x=2019, y=-0.7, label=2019), hjust=0.5, size=4, fontface="bold") +
# geom_point(aes(x=2000), y=0, size=3) +
# geom_point(aes(x=2019), y=0, size=3) +
# Lists of publications
geom_text( aes(x=Year.of.publication, y=text_y, label=substr(Prepared.by, 1, 10), colour=Focus), hjust=0.5, size=3, fontface="bold") +
#coord_cartesian(ylim=c(-30:30)) +
guides(colour=guide_legend( "Industry", override.aes = list(size = 5)))+
theme_void() +
scale_colour_paletteer_d(ggthemes, wsj_colors6) +
theme(
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
legend.key =  element_rect(fill = 'white', size = 2),
legend.text=element_text(size=13),
legend.title=element_text(size=15, face="bold"),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Scenario and Roadmap studies over time",
subtitle = "Filtered on REINVENT sectors ",
y = "Number of publications", x = "Sector", caption = "\n Source: marieyesse.github.io") #+
ggsave(paste("REINVENT_roadmaps_published_Industry_Timeline_Focus", ".png", sep=""), width = 12, height = 9, units = c("in"))
print(TIMELINEpretty_Focus)
## Per Field
TIMELINEpretty_Field = ROADMAPSdat  %>%
group_by(Year.of.publication) %>%
arrange(Field) %>%
mutate(text_position=row_number(),
#odd and even numbers (%%)
location=ifelse(Year.of.publication %% 2, -1, 1)) %>%
mutate(text_y=(((count+(text_position*0.6))*location))+location) %>%
ggplot() +
geom_hline(yintercept = 0, colour="black")+
geom_hline(yintercept = 0, colour="black")+
# Grey line & point
geom_segment(aes(x=Year.of.publication, xend=Year.of.publication, yend=location*2), y=0, colour="grey80") +
geom_point(aes(x=Year.of.publication), y=0, size=3) +
# Timeline text
geom_text(aes(x=Year.of.publication, y=(location*0.7), label=Year.of.publication), hjust=0.5, size=4, fontface="bold") +
# fixed points
# geom_text(aes(x=2000, y=0.7, label=2000), hjust=0.5, size=4, fontface="bold") +
# geom_text(aes(x=2019, y=-0.7, label=2019), hjust=0.5, size=4, fontface="bold") +
# geom_point(aes(x=2000), y=0, size=3) +
# geom_point(aes(x=2019), y=0, size=3) +
# Lists of publications
geom_text( aes(x=Year.of.publication, y=text_y, label=substr(Prepared.by, 1, 10), colour=Field), hjust=0.5, size=3, fontface="bold") +
#coord_cartesian(ylim=c(-30:30)) +
guides(colour=guide_legend( "Field", override.aes = list(size = 5)))+
theme_void() +
scale_colour_paletteer_d(ggthemes, wsj_colors6) +
theme(
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
legend.key =  element_rect(fill = 'white', size = 2),
legend.text=element_text(size=13),
legend.title=element_text(size=15, face="bold"),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Scenario and Roadmap studies over time",
subtitle = "Filtered on publishing field ",
y = "Number of publications", x = "Sector", caption = "\n Source: marieyesse.github.io") +
ggsave(paste("REINVENT_roadmaps_published_Industry_Timeline_Field", ".png", sep=""), width = 12, height = 9, units = c("in"))
print(TIMELINEpretty_Field)
# plot
NETWORKPLOT = NETWORK %>%
group_by(Focus) %>%
#filter(n >= 30 & !Focus=="Industry sector") %>%
#fct_explicit_na( na_level = "NA") %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), colour="lightblue") +
geom_node_point(colour="blue", size = 3) +
geom_node_text(aes(label = name), vjust = 1.8, size = 3) +
labs(title = "Word Network of recently published roadmaps",
subtitle = "Focusing on REINVENT industry sectors ",
x = "", y = "", caption = "\nSource: marieyesse.github.io") +
theme_bw() +
ggsave(paste("Word_Network_PDFCorpus_roadmaps_",".png", sep=""), width = 10, height = 7, units = c("in"), dpi=300)
print(NETWORKPLOT)
NETWORK = PDFCorpus.df %>%
# find paired words
group_by(Focus) %>%
unnest_tokens(paired_words, text, token="ngrams", n=2) %>%
#count
count(paired_words, sort=TRUE) %>%
# split
separate(paired_words, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% c(stop_words$word, "https", "t.co")) %>%
filter(!word2 %in% c(stop_words$word, "https", "t.co"))
# new count: dont know why you would do this???
#count(word1, word2, sort = TRUE)
# plot
NETWORKPLOT = NETWORK %>%
group_by(Focus) %>%
#filter(n >= 30 & !Focus=="Industry sector") %>%
#fct_explicit_na( na_level = "NA") %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = n, edge_width = n), colour="lightblue") +
geom_node_point(colour="blue", size = 3) +
geom_node_text(aes(label = name), vjust = 1.8, size = 3) +
labs(title = "Word Network of recently published roadmaps",
subtitle = "Focusing on REINVENT industry sectors ",
x = "", y = "", caption = "\nSource: marieyesse.github.io") +
theme_bw() +
ggsave(paste("Word_Network_PDFCorpus_roadmaps_",".png", sep=""), width = 10, height = 7, units = c("in"), dpi=300)
print(NETWORKPLOT)
PDFCorpus.df= merge(PDFCorpus.df, AFTER2016dat, c("Prepared.by"))
PDFCorpus.df= merge(PDFCorpus.df, AFTER2016dat, c("Prepared.by"))
PDFCorpus.df = data.frame(text = sapply(PDFCorpus, as.character), stringsAsFactors = FALSE) %>%
mutate(Prepared.by=substr(ALLFILES,1,10)) %>%
mutate(text=(gsub("\n","", text))) %>%
filter(!text %in% c(stop_words$word))
ALLFILES <-list.files(path = "roadmaps")
setwd("/mnt/y/Kennisbasis/IMAGE/model/users/mariesse/R/REINVENT_roadmaps/roadmaps")
PDFCorpus <- lapply(ALLFILES, function(x){extract_text(x)})
ALLFILES <-list.files(path = "roadmaps")
setwd("/mnt/y/Kennisbasis/IMAGE/model/users/mariesse/R/REINVENT_roadmaps/roadmaps")
PDFCorpus <- lapply(ALLFILES, function(x){extract_text(x)})
########################################################################################################################
########################################################################################################################
# Clear memory
rm(list=ls()) # clear memory
# Working directory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Required packages
### If not yet availabe, use install.packages("")
# Soc Media API readers
library(rtweet)
#install.packages("readxl")
library("readxl")
# plotting and pipes!
library(ggplot2)
library(ggforce)
library(plotly)
library(patchwork)
library(dplyr)
library(tidyr)
library(data.table)
library(paletteer)
library(ggrepel)
library(igraph)
library(ggraph)
library(ggforce)
# text mining library
library(tidytext)
library(tm)
library(stringr)
library(pdftools) ## Needs specific Linux install
library(tabulizer) # doesnt
# coupled words analysis
library(widyr)
#install.packages("readxl")
library("readxl")
theme_set(
theme_bw()
)
########################################################################################
## Database
########################################################################################
BEFORE2016 <- c( "literature_overview_before_2016.xlsx")
BEFORE2016dat <- read_excel(BEFORE2016, skip=6)
BEFORE2016dat=data.table(BEFORE2016dat)
BEFORE2016dat = BEFORE2016dat %>%  rename_all(make.names)
# Making groupings
BEFORE2016dat = BEFORE2016dat %>%
# On classification
mutate(Industry = ifelse(Steel %in% c("X"), "Steel",
ifelse(Paper %in% c("X"), "Paper",
ifelse(Plastics %in% c("X"), "Plastics",
ifelse(Food %in% c("X"), "Food", "Other")))),
Model=
case_when((Steel == "X" & Paper=="X" & Plastics == "X") ~ "Industry sector",
(Steel == "(X)" & Paper=="(X)" & Plastics == "(X)") ~ "Industry sector",
(Steel == "X" & Plastics == "X") ~ "Industry sector",  TRUE ~ "Other" ),
Focus = case_when(Model=="Industry sector" ~ Model, TRUE ~ Industry)) %>%
filter(!Focus =="Other") %>%
# On field
mutate(Field = case_when(grepl("scien", tolower(URL))|
grepl("doi", tolower(URL))|
grepl("mdpi", tolower(URL))|
grepl("univ", tolower(URL))|
grepl("eceee", tolower(URL))|
grepl("researchgate", tolower(URL)) ~ "Academic/Research",
grepl("cepi", tolower(URL))|
grepl("cefic", tolower(URL))|
grepl("eurofer", tolower(Prepared.by)) ~ "Business & Trade Assocation",
grepl("iea", tolower(Prepared.by))|
grepl("gov", tolower(URL))|
grepl("ipcc", tolower(URL))|
grepl("ec.euro", tolower(URL))  ~ "(Inter)Governmental",
grepl("bcg", tolower(URL))|
grepl("atkearney", tolower(URL)) ~  "Consultancy",
grepl("bellona", tolower(URL)) ~ "NGO",
TRUE ~ "Other"))
BEFORE2016dat$count <- 1
BEFORE2016dat$Year.of.publication <- as.numeric(BEFORE2016dat$Year.of.publication)
########## After 2016
AFTER2016 <- data.table(Study.title=c(list.files(path = "roadmaps")))
AFTER2016dat = AFTER2016 %>%
mutate(Year.of.publication= as.numeric(substr(gsub("[[:alpha:][:punct:][:space:]]", "", Study.title),1,4)),
Field = case_when(grepl("et_al", tolower(Study.title))|
grepl("doi", tolower(Study.title))|
grepl("mdpi", tolower(Study.title))|
grepl("univ", tolower(Study.title))|
grepl("eceee", tolower(Study.title))|
grepl("researchgate", tolower(Study.title)) ~ "Academic/Research",
grepl("cepi", tolower(Study.title))|
grepl("cefic", tolower(Study.title))|
grepl("vnci", tolower(Study.title))|
grepl("vnp", tolower(Study.title))|
grepl("cembureau", tolower(Study.title))|
grepl("eurofer", tolower(Study.title)) ~ "Business & Trade Assocation",
grepl("iea", tolower(Study.title))|
grepl("gov", tolower(Study.title))|
grepl("jrc", tolower(Study.title))|
grepl("decc", tolower(Study.title))|
grepl("ec_", tolower(Study.title))  ~ "(Inter)Governmental",
grepl("bcg", tolower(Study.title))|
grepl("tno", tolower(Study.title))|
grepl("berenschot", tolower(Study.title))|
grepl("mckinsey", tolower(Study.title))|
grepl("atkearney", tolower(Study.title)) ~  "Consultancy",
grepl("bellona", tolower(Study.title))|
grepl("wwf", tolower(Study.title))  ~ "NGO",
TRUE ~ "Other"),
Focus = case_when(grepl("steel", tolower(Study.title)) ~ "Steel",
grepl("plastic", tolower(Study.title))|
grepl("plastics", tolower(Study.title))|
grepl("cefic", tolower(Study.title))|
grepl("chemical", tolower(Study.title)) ~ "Plastics",
grepl("food", tolower(Study.title))|
grepl("meat", tolower(Study.title))|
grepl("dairy", tolower(Study.title)) ~ "Food",
grepl("cement", tolower(Study.title))|
grepl("cembureau", tolower(Study.title)) ~  "Cement",
grepl("paper", tolower(Study.title))|
grepl("ppi", tolower(Study.title))|
grepl("vnp", tolower(Study.title))|
grepl("pulp", tolower(Study.title)) ~ "Paper",
TRUE ~ "Industry sector"),
Prepared.by = substr(Study.title, 1, 10))
AFTER2016dat$count <- 1
############# Aggregating
AFTER2016dat=data.table(AFTER2016dat)
BEFORE2016dat=data.table(BEFORE2016dat)
ROADMAPSdat= rbind(BEFORE2016dat[,c("Study.title","Year.of.publication", "Prepared.by", "Focus", "Field", "count")],AFTER2016dat)
######## Timeline plotting
TIMELINEpretty_Focus = ROADMAPSdat  %>%
group_by(Year.of.publication) %>%
arrange(Focus) %>%
mutate(text_position=row_number(),
#odd and even numbers
location=ifelse(Year.of.publication %% 2, -1, 1)) %>%
mutate(text_y=(((count+(text_position*0.6))*location))+location) %>%
ggplot() +
geom_hline(yintercept = 0, colour="black")+
geom_hline(yintercept = 0, colour="black")+
# Grey line & point
geom_segment(aes(x=Year.of.publication, xend=Year.of.publication, yend=location*2), y=0, colour="grey80") +
geom_point(aes(x=Year.of.publication), y=0, size=3) +
# Timeline text
geom_text(aes(x=Year.of.publication, y=(location*0.7), label=Year.of.publication), hjust=0.5, size=4, fontface="bold") +
# fixed points
# geom_text(aes(x=2000, y=0.7, label=2000), hjust=0.5, size=4, fontface="bold") +
# geom_text(aes(x=2019, y=-0.7, label=2019), hjust=0.5, size=4, fontface="bold") +
# geom_point(aes(x=2000), y=0, size=3) +
# geom_point(aes(x=2019), y=0, size=3) +
# Lists of publications
geom_text( aes(x=Year.of.publication, y=text_y, label=substr(Prepared.by, 1, 10), colour=Focus), hjust=0.5, size=3, fontface="bold") +
#coord_cartesian(ylim=c(-30:30)) +
guides(colour=guide_legend( "Industry", override.aes = list(size = 5)))+
theme_void() +
scale_colour_paletteer_d(ggthemes, wsj_colors6) +
theme(
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
legend.key =  element_rect(fill = 'white', size = 2),
legend.text=element_text(size=13),
legend.title=element_text(size=15, face="bold"),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Scenario and Roadmap studies over time",
subtitle = "Filtered on REINVENT sectors ",
y = "Number of publications", x = "Sector", caption = "\n Source: marieyesse.github.io") #+
ggsave(paste("REINVENT_roadmaps_published_Industry_Timeline_Focus", ".png", sep=""), width = 12, height = 9, units = c("in"))
print(TIMELINEpretty_Focus)
## Per Field
TIMELINEpretty_Field = ROADMAPSdat  %>%
group_by(Year.of.publication) %>%
arrange(Field) %>%
mutate(text_position=row_number(),
#odd and even numbers (%%)
location=ifelse(Year.of.publication %% 2, -1, 1)) %>%
mutate(text_y=(((count+(text_position*0.6))*location))+location) %>%
ggplot() +
geom_hline(yintercept = 0, colour="black")+
geom_hline(yintercept = 0, colour="black")+
# Grey line & point
geom_segment(aes(x=Year.of.publication, xend=Year.of.publication, yend=location*2), y=0, colour="grey80") +
geom_point(aes(x=Year.of.publication), y=0, size=3) +
# Timeline text
geom_text(aes(x=Year.of.publication, y=(location*0.7), label=Year.of.publication), hjust=0.5, size=4, fontface="bold") +
# fixed points
# geom_text(aes(x=2000, y=0.7, label=2000), hjust=0.5, size=4, fontface="bold") +
# geom_text(aes(x=2019, y=-0.7, label=2019), hjust=0.5, size=4, fontface="bold") +
# geom_point(aes(x=2000), y=0, size=3) +
# geom_point(aes(x=2019), y=0, size=3) +
# Lists of publications
geom_text( aes(x=Year.of.publication, y=text_y, label=substr(Prepared.by, 1, 10), colour=Field), hjust=0.5, size=3, fontface="bold") +
#coord_cartesian(ylim=c(-30:30)) +
guides(colour=guide_legend( "Field", override.aes = list(size = 5)))+
theme_void() +
scale_colour_paletteer_d(ggthemes, wsj_colors6) +
theme(
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
legend.key =  element_rect(fill = 'white', size = 2),
legend.text=element_text(size=13),
legend.title=element_text(size=15, face="bold"),
strip.background = element_rect(colour="white", fill="#FFFFFF")
) +
labs(title = "Scenario and Roadmap studies over time",
subtitle = "Filtered on publishing field ",
y = "Number of publications", x = "Sector", caption = "\n Source: marieyesse.github.io") +
ggsave(paste("REINVENT_roadmaps_published_Industry_Timeline_Field", ".png", sep=""), width = 12, height = 9, units = c("in"))
print(TIMELINEpretty_Field)
############## readPDF
## Cannot install "pdftools"
#help tabulizer: http://theautomatic.net/2018/08/24/getting-data-from-pdfs-the-easy-way-with-r/
# help corpus analysis: https://data.library.virginia.edu/reading-pdf-files-into-r-for-text-mining/
ALLFILES <-list.files(path = "roadmaps")
setwd("/mnt/y/Kennisbasis/IMAGE/model/users/mariesse/R/REINVENT_roadmaps/roadmaps")
PDFCorpus <- lapply(ALLFILES, function(x){extract_text(x)})
#PDFmeta <- lapply(ALLFILES, extract_metadata)
setwd("/mnt/y/Kennisbasis/IMAGE/model/users/mariesse/R/REINVENT_roadmaps")
#
# # PDFCorpusdat <- Corpus(VectorSource(PDFCorpus))
# #
# # PDFCorpusdatana = PDFCorpusdat %>%
# #   tm_map(removeWords, stopwords("english"))
# #
# # PDFCorpusdatanapunct = PDFCorpusdatana %>%
# #   tm_map(content_transformer(removePunctuation))
# To
