widths=c(2,2)),
arrangeGrob(blank, blank, legend.figfutchem, arrangeGrob(legend.figfutlinetype, blank, nrow=1, widths=c(1,0.1)), blank,blank,
ncol=1),
nrow = 1,
widths=c(4,1.5),
left = textGrob("", rot = 90, vjust = 1, gp=gpar(fontsize=12)))
grid.newpage()
grid.draw(FUTUREFIGCHEMprod)
png("PDF/CHEM_Future_trends_production.png", width=700, height=700)
grid.newpage()
grid.draw(FUTUREFIGCHEMprod)
dev.off()
########################################################################
############ FOOD Production data (in KTonnes) OECD FAO https://stats.oecd.org/Index.aspx?DataSetCode=HIGH_AGLINK_2017#
########################################################################
# Meat consumption 1990-2025 (in tonnes).FAO Agriculture Outlook: https://stats.oecd.org/Index.aspx?DataSetCode=HIGH_AGLINK_2017#
setwd("~/disks/y/ontwapps/Timer/Users/Mariesse/R/REINVENT/DEVELOPMENT/IEA")
FAOMEAT= read.csv("OECDFAO_Agricultural_outlook_20172026.csv", sep=",", dec=".")
FAOMEAT=data.table(FAOMEAT)
FAOMEAT.eu=FAOMEAT[COUNTRY=="EUR" & Variable=="Production" & !COMMODITY=="DAIRY"]
FAOMEAT.eu=merge(FAOMEAT.eu, FAOMEAT.eu[Time=="2015", -c("TIME", "Time","Flag.Codes", "Flags")], by=c("COUNTRY", "Country", "COMMODITY", "Commodity", "VARIABLE", "Variable"))
setnames(FAOMEAT.eu, "Value.y", "Y2010")
setnames(FAOMEAT.eu, "Value.x", "Value")
FAOMEAT.eu=FAOMEAT.eu %>% mutate(ByY=(Value/Y2010)*100)
FAOMEAT.eu=data.table(FAOMEAT.eu)
FAOMEAT.eu$Study <- "OECD-FAO (2017)"
FAOMEAT.eu$Label <- paste (FAOMEAT.eu$COMMODITY, FAOMEAT.eu$Commodity)
FAOMEAT.eumilk=FAOMEAT.eu[COMMODITY %in% c("BT", "CA", "CH", "FDP", "MK", "SMP", "WMP", "WYP")]
FAOMEAT.eumilk$Food <- "Dairy"
FAOMEAT.eumeat=FAOMEAT.eu[!COMMODITY %in% c("BT", "CA", "CH", "FDP", "MK", "SMP", "WMP", "WYP")]
FAOMEAT.eumeat$Food <- "Meat"
setwd("/mnt/public/sluisveldvm/ontwapps/Timer/Users/Mariesse/R/REINVENT/DEVELOPMENT/Scenarios")
FAODATA=rbind(FAOMEAT.eumilk, FAOMEAT.eumeat)
FAODATA=data.table(FAODATA)
FAODATA= FAODATA[, sum(Value, na.rm=T), by=c("Time", "Food", "Study", "Country")]
FAODATA2010=FAODATA[Time=="2010"]
FAODATA=merge(FAODATA, FAODATA2010, by=c("Food", "Study", "Country"))
FAODATAcalc=FAODATA %>% mutate(index=(V1.x/V1.y)*100)
PRODVOLmergecalcindexnewfood=PRODVOLmergecalcindexnew
setnames(PRODVOLmergecalcindexnewfood,"Variable", "Food")
# Plot graph: PER SECTOR IN TOTAL., NOTE IEA DATA IN KTOE.  1ktoe =~42PJ
INDFOODprodby=ggplot() +
geom_hline(yintercept=100, linetype=2) +
#
#geom_line(data=(FAOMEAT.eumeat), aes(x=Time, y=ByY, colour=Study, group=Commodity), size=1) +
# geom_label(data=FAOMEAT.eumeat[Time=="2026"], aes(x=Time, y=ByY, label=COMMODITY), size=3) +
# geom_label(data=FAOMEAT.eumilk[Time=="2026"], aes(x=Time, y=ByY, label=COMMODITY), size=3) +
# IMAGE
geom_line(data=PRODVOLmergecalcindexnewfood[Region=="EU28" & Food %in% c("Dairy", "Meat") & !Scenario=="SSP2"], aes(x=Year.x, y=index, colour=Study, group=Scenario, linetype=Scenario), size=1 ) +
#FAO
geom_line(data=FAODATAcalc, aes(x=Time.x, y=index, colour=Study, group=Food), size=1 ) +
scale_colour_manual(values=c( '#000000', '#fdae61'),
breaks=c("OECD-FAO (2017)",  "IMAGE")
) +
facet_wrap(~Food, nrow=1) +
coord_cartesian(xlim=c(2010:2030), ylim=c(60:145)) +
theme_bw() +
ggtitle("Production volume over time") +
labs(y="Index (2015=100) ", x = "Year") +
guides(colour=guide_legend("Study"))+
GROBTHEME
print(INDFOODprodby)
png("figures/Lit_Compare_PRODVOL_food.png", width=700, height=350)
grid.newpage()
grid.draw(INDFOODprodby)
dev.off()
########## COMBIGROB
### Grob in a grob in a grob
######## grob in a grob
###
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
legend.overview <- get_legend(ECONOMYemis152CTotal)
#IAMC abstract
# a grob in a grob in a grob
LITREVIEW <-arrangeGrob(arrangeGrob(IEATOTDEMFUTy2005IMAGECO2+ theme(
#legend.position="none",
plot.title = element_text(hjust=0.5, size=16),
plot.subtitle= element_blank(),
panel.border = element_rect(colour = "black", size=1),
axis.title.x = element_blank(),
#axis.title.y = element_blank(),
axis.text.x = element_text(margin=margin(7,5,10,5,"pt"), size=13),
axis.text.y = element_text(hjust=0.5, size=13),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(colour="white", fill="#FFFFFF"))),
arrangeGrob(INDTEELemisby
+ theme(
#legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank(),
panel.border = element_rect(colour = "black", size=1),
axis.title.x = element_blank(),
# axis.title.y = element_blank(),
axis.text.x = element_text(margin=margin(7,5,10,5,"pt"), size=13),
axis.text.y =  element_text(hjust=0.5, size=13),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(colour="white", fill="#FFFFFF"),
legend.position="bottom",
legend.direction="vertical"),
arrangeGrob(INDCHEMemisby+ theme(
#legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank(),
legend.position="bottom",
legend.direction="vertical"), nullGrob(), ncol=1, heights=c(5.5,1)),
arrangeGrob(INDPPIemisby+ theme(
#legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank(),
legend.position="bottom",
legend.direction="vertical"), nullGrob(), ncol=1, heights=c(25,1)),
nrow=1,
widths = c(2,2,2) ),
ncol=1,
bottom=NULL,
#left=textGrob("Index (2010 = 100)", vjust = 0.5, rot=90, gp=gpar(fontsize=14)) ,
heights=c(4,2.5))
grid.newpage()
grid.draw(LITREVIEW)
dev.off()
setwd("/mnt/public/sluisveldvm/ontwapps/Timer/Users/Mariesse/R/REINVENT/DEVELOPMENT")
png("scenarios/figures/ALL_LITERATURE_REVIEW_CO2.png", width=950, height=1250)
grid.newpage()
grid.draw(LITREVIEW)
dev.off()
ggsave("scenarios/figures/ALL_LITERATURE_REVIEW_CO2.pdf", width=11, height=14, unit="in")
# Lund meeting
# a grob in a grob in a grob
LITREVIEW_CO2 <-arrangeGrob(
arrangeGrob(INDTEELemisby +theme(legend.position="none",
plot.title = element_blank()),
INDCHEMemisby+theme(legend.position="none",
plot.title = element_blank()),
nrow=1,
widths = c(2,2) ),
arrangeGrob(
INDPPIemisby+theme(legend.position="none",
plot.title = element_blank()),
INDFOODemisby+theme(legend.position="none",
plot.title = element_blank()),
nrow=1,
widths = c(2,2) ),
ncol=1,
bottom=NULL,
#left=textGrob("Index (2010 = 100)", vjust = 0.5, rot=90, gp=gpar(fontsize=14)) ,
heights=c(4,4))
grid.newpage()
grid.draw(LITREVIEW_CO2)
dev.off()
setwd("/mnt/public/sluisveldvm/ontwapps/Timer/Users/Mariesse/R/REINVENT/DEVELOPMENT")
png("Scenarios/figures/ALL_LITERATURE_REVIEW_CO2_industry.png", width=700, height=700)
grid.newpage()
grid.draw(LITREVIEW_CO2)
dev.off()
##############################################################################################################################
################################################# TWITTER OVERVIEW IMAGE/WISEE only
##############################################################################################################################
#D4.2
INDFOODemisbyTwitter=ggplot() +
geom_hline(yintercept=100, linetype=2) +
#IMAGE
geom_line(data=CO2indexcalc[Variable %in% c( "Food") & Region %in% c("EU28") & Scenario %in% c("2 Degrees", "1.5 Degrees") ], aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
scale_colour_manual(values=c("#a5ae64","#4bbff2")) +
facet_wrap(~Variable, ncol=1) +
coord_cartesian(xlim=c(2005:2050), ylim=c(0:150)) +
theme_bw() +
ggtitle(bquote(bold("Total"~CO[2]~"emissions"))) +
labs(y="Index (2010=100) ", x = "Year") +
guides(fill=guide_legend("Sector"))+
GROBTHEME
print(INDFOODemisbyTwitter)
INDCHEMemisbyTwitter=ggplot() +
geom_hline(yintercept=100, linetype=2) +
geom_hline(yintercept = 0, linetype=1, alpha=0.4) +
#IMAGE
geom_line(data=CO2indexcalc[Variable %in% c( "Chemical") & Region %in% c("EU28") & Scenario %in% c("2 Degrees", "1.5 Degrees") ], aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
# WISEE
geom_line(data=WISEECO2share[Sector=="Chemical" & Variable=="Emissions|CO2"], aes(x=Year.x, y=Index, group=Scenario, linetype=Scenario, colour=Study), size=1) +
facet_wrap(~Sector, ncol=1) +
coord_cartesian(xlim=c(2005:2050), ylim=c(0:150)) +
theme_bw() +
ggtitle(bquote(bold("Total"~CO[2]~"emissions"))) +
labs(y="Index (2010=100) ", x = "Year") +
guides(fill=guide_legend("Sector"))+
scale_colour_manual(values=c("#a5ae64","#4bbff2")) +
scale_linetype_manual(values=c(6,1,6,1)) +
GROBTHEME
print(INDCHEMemisbyTwitter)
INDPPIemisbyTwitter=ggplot() +
geom_hline(yintercept=100, linetype=2) +
geom_hline(yintercept = 0, linetype=1, alpha=0.4) +
#IMAGE
geom_line(data=CO2indexcalc[Variable %in% c("Pulp and Paper") & Region %in% c("EU28") & Scenario %in% c("2 Degrees", "1.5 Degrees") ], aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
# WISEE
geom_line(data=WISEECO2share[Sector=="Pulp and Paper" & Variable=="Emissions|CO2"], aes(x=Year.x, y=Index, group=Scenario, linetype=Scenario, colour=Study), size=1) +
facet_wrap(~Sector, ncol=1) +
coord_cartesian(xlim=c(2005:2050), ylim=c(-50:120)) +
theme_bw() +
ggtitle(bquote(bold("Total"~CO[2]~"emissions"))) +
labs(y="Index (2010=100) ", x = "Year") +
guides(fill=guide_legend("Sector"))+
scale_colour_manual(values=c("#a5ae64","#4bbff2")) +
scale_linetype_manual(values=c(6,1,6,1)) +
GROBTHEME
print(INDPPIemisbyTwitter)
INDTEELemisbyTwitter=ggplot() +
geom_hline(yintercept=100, linetype=2) +
geom_hline(yintercept = 0, linetype=1, alpha=0.4) +
#IMAGE
geom_line(data=CO2indexcalc[Variable %in% c("Iron and Steel") & Region %in% c("EU28") & Scenario %in% c("2 Degrees", "1.5 Degrees") ], aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
# WISEE
geom_line(data=WISEECO2share[Sector=="Iron and Steel" & Variable=="Emissions|CO2"], aes(x=Year.x, y=Index, group=Scenario, linetype=Scenario, colour=Study), size=1) +
facet_wrap(~Sector, ncol=1) +
coord_cartesian(xlim=c(2005:2050), ylim=c(0:150)) +
theme_bw() +
ggtitle(bquote(bold("Total"~CO[2]~"emissions"))) +
labs(y="Index (2010=100) ", x = "Year") +
guides(fill=guide_legend("Sector"))+
scale_colour_manual(values=c("#a5ae64","#4bbff2")) +
scale_linetype_manual(values=c(6,1,6,1)) +
GROBTHEME
print(INDTEELemisbyTwitter)
###
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
legend.overviewtwit <- get_legend(INDTEELemisbyTwitter)
# a grob in a grob in a grob
LITREVIEWTWITTER <-arrangeGrob(arrangeGrob(arrangeGrob(
INDTEELemisbyTwitter
+ theme(
legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank()),
INDCHEMemisbyTwitter + theme(
legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank()),
nrow=1, widths=c(3,3))
,
arrangeGrob(
INDPPIemisbyTwitter + theme(
legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank()),
INDFOODemisbyTwitter + theme(
legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank()),
nrow=1, widths=c(3,3)),
ncol=1,
bottom=NULL,
top=textGrob("Indexed CO2 emissions", vjust = 0.5, rot=0, gp=gpar(fontsize=14)) ,
heights=c(4,4)),
nrow=1,
legend.overviewtwit,
widths=c(4,1))
grid.newpage()
grid.draw(LITREVIEWTWITTER)
dev.off()
png("scenarios/figures/TWITTER_EMISSION_PATHWAYS_IMAGE_WISEE.png", width=600, height=500)
grid.newpage()
grid.draw(LITREVIEWTWITTER)
dev.off()
ggsave("scenarios/figures/TWITTER_EMISSION_PATHWAYS_IMAGE_WISEE.pdf", width=11, height=14, unit="in")
############Poster
INDTEELemisbyPoster=ggplot() +
geom_hline(yintercept=100, linetype=2) +
# Data Clemens????
geom_line(data=D41STEEL[Indicator=="GHG Emissions"], aes(x=Target, y=index, group=Scenario), colour='darkgrey')+
geom_hline(yintercept = 0, linetype=1, alpha=0.4) +
#IMAGE
geom_line(data=CO2indexcalc[Variable %in% c("Iron and Steel") & Region %in% c("EU28") & Scenario %in% c("2 Degrees", "1.5 Degrees") ], aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
# WISEE
geom_line(data=WISEECO2share[Sector=="Iron and Steel" & Variable=="Emissions|CO2"], aes(x=Year.x, y=Index, group=Scenario, linetype=Scenario, colour=Study), size=1) +
# Other
geom_line(data=data.table(Year.x=c(2020),
INDEX=c(0),
Scenario=c("2 Degrees"),
Study=c("Others"),
Sector=c("Iron and Steel")), aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
facet_wrap(~Sector, ncol=1) +
coord_cartesian(xlim=c(2005:2050), ylim=c(0:150)) +
theme_bw() +
ggtitle(bquote(bold("Total"~CO[2]~"emissions"))) +
labs(y="Index (2010=100) ", x = "Year") +
guides(fill=guide_legend("Sector"))+
scale_colour_manual(values=c('#2ca25f', "darkgrey",'blue'),
breaks=c( "IMAGE", "WISEE", "Others") ) +
scale_linetype_manual(values=c(6,1,6,1)) +
GROBTHEME
print(INDTEELemisbyPoster)
#####
INDCHEMemisbyPoster=ggplot() +
geom_hline(yintercept=100, linetype=2) +
#CEFIC/Ecofys (2013)
geom_line(data=CEFICchem.emis[!Scenario=="BL" & Sector=="Chemical"], aes(x=Year, y=ByY,  group=Scenario), colour='darkgrey') +
#Broeren et al. (2014)
geom_line(data=Broerenchem.emis[!Scenario=="BL" & Sector=="Chemical"], aes(x=Year, y=ByY, group=Scenario), colour='darkgrey' ) +
#WSP p. 64  this is UK based
geom_line(data=WSP.emis[!Scenario=="BL" & Sector=="Chemical"], aes(x=Year, y=ByY,  group=Scenario), colour='darkgrey') +
geom_hline(yintercept = 0, linetype=1, alpha=0.4) +
#IMAGE
geom_line(data=CO2indexcalc[Variable %in% c( "Chemical") & Region %in% c("EU28") & Scenario %in% c("2 Degrees", "1.5 Degrees") ], aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
# WISEE
geom_line(data=WISEECO2share[Sector=="Chemical" & Variable=="Emissions|CO2"], aes(x=Year.x, y=Index, group=Scenario, linetype=Scenario, colour=Study), size=1) +
facet_wrap(~Sector, ncol=1) +
coord_cartesian(xlim=c(2005:2050), ylim=c(0:150)) +
theme_bw() +
ggtitle(bquote(bold("Total"~CO[2]~"emissions"))) +
labs(y="Index (2010=100) ", x = "Year") +
guides(fill=guide_legend("Sector"))+
scale_colour_manual(values=c('#2ca25f','blue'),
breaks=c("IMAGE", "WISEE")
) +
scale_linetype_manual(values=c(6,1,6,1)) +
GROBTHEME
print(INDCHEMemisbyPoster)
##
INDPPIemisbyPoster=ggplot() +
geom_hline(yintercept=100, linetype=2) +
# Data Clemens????
# ??????????? Clemens data
geom_line(data=D41PAPER[Indicator=="GHG Emissions"], aes(x=Target, y=index, group=Scenario), colour='darkgrey')+
geom_hline(yintercept = 0, linetype=1, alpha=0.4) +
#IMAGE
geom_line(data=CO2indexcalc[Variable %in% c("Pulp and Paper") & Region %in% c("EU28") & Scenario %in% c("2 Degrees", "1.5 Degrees") ], aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
# WISEE
geom_line(data=WISEECO2share[Sector=="Pulp and Paper" & Variable=="Emissions|CO2"], aes(x=Year.x, y=Index, group=Scenario, linetype=Scenario, colour=Study), size=1) +
facet_wrap(~Sector, ncol=1) +
coord_cartesian(xlim=c(2005:2050), ylim=c(-50:120)) +
theme_bw() +
ggtitle(bquote(bold("Total"~CO[2]~"emissions"))) +
labs(y="Index (2010=100) ", x = "Year") +
guides(fill=guide_legend("Sector"))+
scale_colour_manual(values=c( '#2ca25f','blue'),
breaks=c( "IMAGE",  "WISEE")) +
scale_linetype_manual(values=c(6,1,6,1)) +
GROBTHEME
print(INDPPIemisbyPoster)
###
INDFOODemisbyPoster=ggplot() +
geom_hline(yintercept=100, linetype=2) +
#WSP p. 64  this is UK based
geom_line(data=WSP.foodemis[!Scenario=="BL" & Sector=="Food"], aes(x=Year, y=ByY, colour=Study, group=Scenario), colour='grey' ) +
#geom_line(data=WSP.foodemis[Scenario=="BL" & Sector=="Food"], aes(x=Year, y=ByX, colour=Study, group=Scenario), size=1, linetype=2 ) +
#Audrey et al (2009) (WWF) all areas scenario.  this is UK based
geom_line(data=data.table(Year=c(2010,2020,2030,2040,2050),
Study=c(rep("Audsley et al. (2009)",5)),
Scenario=c(rep("Decarbonisation", 5)),
ByY=c(100,79,62,48,30)), aes(x=Year, y=ByY,  group=Scenario), colour='grey' ) +
#IMAGE
geom_line(data=CO2indexcalc[Variable %in% c( "Food") & Region %in% c("EU28") & Scenario %in% c("2 Degrees", "1.5 Degrees") ], aes(x=Year.x, y=INDEX, group=Scenario, linetype=Scenario, colour=Study), size=1)+
scale_colour_manual(values=c('#2ca25f'),
breaks=c( "IMAGE")
) +
facet_wrap(~Sector, ncol=1) +
coord_cartesian(xlim=c(2005:2050), ylim=c(0:150)) +
theme_bw() +
ggtitle(bquote(bold("Total"~CO[2]~"emissions"))) +
labs(y="Index (2010=100) ", x = "Year") +
guides(fill=guide_legend("Sector"))+
GROBTHEME
print(INDFOODemisbyPoster)
###
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
legend.overviewpost <- get_legend(INDTEELemisbyPoster)
# a grob in a grob in a grob
LITREVIEWPOSTER <-arrangeGrob(arrangeGrob(arrangeGrob(
INDTEELemisbyPoster
+ theme(
legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank(),
strip.text.x = element_text(size=18, face="bold"),
strip.text.y = element_text(size=18, face="bold"),
axis.text.x = element_text(angle = 45, size=16,  hjust=1),
axis.text.y = element_text(size=18,  hjust=1),
axis.title.y = element_text(size=16)),
INDCHEMemisbyPoster + theme(
legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank(),
strip.text.x = element_text(size=18, face="bold"),
strip.text.y = element_text(size=18, face="bold"),
axis.text.x = element_text(angle = 45, size=16,  hjust=1),
axis.text.y = element_text(size=18,  hjust=1),
axis.title.y = element_text(size=16)),
nrow=1, widths=c(3,3))
,
arrangeGrob(
INDPPIemisbyPoster + theme(
legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank(),
strip.text.x = element_text(size=18, face="bold"),
strip.text.y = element_text(size=18, face="bold"),
axis.text.x = element_text(angle = 45, size=16,  hjust=1),
axis.text.y = element_text(size=18,  hjust=1),
axis.title.y = element_text(size=16)),
INDFOODemisbyPoster + theme(
legend.position="none",
plot.title = element_blank(),
plot.subtitle= element_blank(),
strip.text.x = element_text(size=18, face="bold"),
strip.text.y = element_text(size=18, face="bold"),
axis.text.x = element_text(angle = 45, size=16,  hjust=1),
axis.text.y = element_text(size=18,  hjust=1),
axis.title.y = element_text(size=16)
),
nrow=1, widths=c(3,3)),
ncol=1,
bottom=NULL,
top=textGrob("Indexed CO2 emissions", vjust = 0.5, rot=0, gp=gpar(fontsize=26, fontface="bold")) ,
heights=c(4,4)),
nrow=1,
legend.overviewpost,
widths=c(4,1))
grid.newpage()
grid.draw(LITREVIEWPOSTER)
dev.off()
png("scenarios/figures/POSTER_EMISSION_PATHWAYS_IMAGE_WISEE.png",
width     = 10,
height    = 9,
units     = "in",
res       = 1600,
pointsize = 3)
grid.newpage()
grid.draw(LITREVIEWPOSTER)
dev.off()
### Compound rates IMAGE
#IMAGE
CO2indexcalc=data.table(CO2indexcalc)
CO2indexcalc.cr=CO2indexcalc[, -c("INDEX")]
CO2indexcalc.cr=data.table(CO2indexcalc.cr)
# base Year = 2015
CO2indexcalc.cr2015=CO2indexcalc.cr[Year.x=="2015", -c("Year.y", "value.y")]
setnames(CO2indexcalc.cr2015, "Year.x", "Year.y")
setnames(CO2indexcalc.cr2015, "value.x", "value.y")
CO2indexcalc.cr1=merge(CO2indexcalc.cr[,-c("Year.y", "value.y")], CO2indexcalc.cr2015, by=c("Variable", "Scenario", "Region", "Unit", "Study"))
# base Year = 2030
CO2indexcalc.cr2030=CO2indexcalc.cr[Year.x=="2030", -c("Year.y", "value.y")]
setnames(CO2indexcalc.cr2030, "Year.x", "Year.y")
setnames(CO2indexcalc.cr2030, "value.x", "value.y")
CO2indexcalc.cr2=merge(CO2indexcalc.cr[,-c("Year.y", "value.y")], CO2indexcalc.cr2030, by=c("Variable", "Scenario", "Region", "Unit", "Study"))
# Combining baseyear 2015 and baseyear 2030
CO2indexcalc.cr=rbind(CO2indexcalc.cr1, CO2indexcalc.cr2)
#Compound rate calculation
CO2indexcalc.cr= CO2indexcalc.cr %>% mutate(CR=(1-((value.x/value.y)^(1/(Year.x-Year.y))))*100)
CO2indexcalc.cr=data.table(CO2indexcalc.cr)
CO2indexcalc.cr=CO2indexcalc.cr[Year.x %in% c("2030", "2050")]
CO2indexcalc.cr$identifier <- paste(CO2indexcalc.cr$Year.x, CO2indexcalc.cr$Year.y)
setnames(CO2indexcalc.cr, "Variable", "Sector")
#WISEE
WISEECO2share.cr=WISEECO2share[, -c("Index")]
WISEECO2share.cr=data.table(WISEECO2share.cr)
# base Year = 2030
WISEECO2share.cr2030=WISEECO2share.cr[Year.x=="2030", -c("Year.y", "value.y")]
setnames(WISEECO2share.cr2030, "Year.x", "Year.y")
setnames(WISEECO2share.cr2030, "value.x", "value.y")
WISEECO2share.cr2=merge(WISEECO2share.cr[,-c("Year.y", "value.y")], WISEECO2share.cr2030, by=c("Variable", "Scenario", "Sector",  "Study"))
# Combining baseyear 2015 and baseyear 2030
WISEECO2share.cr=rbind(WISEECO2share.cr, WISEECO2share.cr2)
#Compound rate calculation
WISEECO2share.cr= WISEECO2share.cr %>% mutate(CR=(1-((value.x/value.y)^(1/(Year.x-Year.y))))*100)
WISEECO2share.cr=data.table(WISEECO2share.cr)
WISEECO2share.cr=WISEECO2share.cr[Year.x %in% c("2030", "2050")]
WISEECO2share.cr$identifier <- paste(WISEECO2share.cr$Year.x, WISEECO2share.cr$Year.y)
# Combining IMAGE and WISEE
INDUSEMISSCOMPOUND=rbind(CO2indexcalc.cr[,-c("Unit", "Region")], WISEECO2share.cr[Variable=="Emissions|CO2", -c("Variable")])
INDUSEMISSCOMPOUND=INDUSEMISSCOMPOUND[, -c("Year.x", "value.x", "Year.y", "value.y")]
#INDUSEMISSCOMPOUND=spread(INDUSEMISSCOMPOUND, identifier, CR)
INDUSEMISSCOMPOUND=INDUSEMISSCOMPOUND[!CR >50]
INDUSEMISSCOMPOUNDminmax=INDUSEMISSCOMPOUND[,list(ymax=max(CR,na.rm = TRUE),ymin=min(CR,na.rm = TRUE)),by=c("Study","Sector", "identifier")]
## BAR chart
INDUSCOMPOUNDby=ggplot() +
geom_crossbar(data=INDUSEMISSCOMPOUNDminmax[identifier %in% c("2030 2015", "2050 2030")], aes(x=as.factor(Sector), ymin=ymin, ymax=ymax, y=(ymax), fill=Study, colour=Study), width=0.5, position=position_dodge(width=0.8))+
facet_wrap(~identifier, scales="free_y") +
theme_bw() +
#coord_cartesian(ylim = c(0:12)) +
ggtitle("Efficiency improvement rate") +
labs(y="Efficiency improvement (%/p.a.)", x = "Year") +
guides(fill=guide_legend("Sector"))+
scale_fill_manual(values=c('#2ca25f','blue'),
breaks = c("IMAGE", "WISEE")) +
scale_colour_manual(values=c('#2ca25f','blue'),
breaks = c("IMAGE", "WISEE")) +
GROBTHEME
print(INDUSCOMPOUNDby)
# Clear memory
rm(list=ls()) # clear memory
####### Set working directory (all files should be in same level as script)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source(file="Scenarios/REINVENT_scenario_analysis.R")
setwd("/mnt/y/Kennisbasis/IMAGE/model/users/mariesse/R/REINVENT/DEVELOPMENT")
setwd("/mnt/public/sluisveldvm/ontwapps/Timer/Users/Mariesse/R/REINVENT/DEVELOPMENT/")
source(file="Scenarios/REINVENT_scenario_analysis.R")
