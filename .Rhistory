##############################################################################################################################
SCENSTEEL <- SCENdat %>%
filter(grepl("steel", tolower(Variable), fixed=T))
SCENSTEELCAP <-   SCENSTEEL %>%
filter(grepl("capacity", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Technology"), sep = "[|]") %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Technology), position="stack", colour="black") +
labs(title="Capacity",
x="Year",
y="Mt/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENSTEELCAP)
```
### Final Energy
Not sure if T2RT/endem/hidem/finalenergyexclfeedstock.out still gives off the right final energy data here... I expect coal and gas to be leading here.
```{r steel-energy, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=7}
SCENSTEEL <- SCENdat %>%
filter(grepl("steel", tolower(Variable), fixed=T))
SCENSTEELFINE <-   SCENSTEEL %>%
filter(grepl("final energy", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Carrier"), sep = "[|]") %>%
filter(!is.na(Carrier)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Carrier), position="stack", colour="black") +
labs(title="Final Energy Use",
x="Year",
y="EJ/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENSTEELFINE)
```
## Cement {.tabset}
### CO2 Emissions
```{r ce-emis, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=5}
SCENCE <- SCENdat %>%
filter(grepl("cement", tolower(Variable), fixed=T))
SCENCEEMIS <-   SCENCE %>%
filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Type"), sep = "[|]") %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_line(aes(x=Year, y=value, colour=Scenario, group=Scenario)) +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Type, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENCEEMIS)
```
### Material Demand
Demand seems to slowly increase again in DemandMan
```{r ce-material, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=7}
SCENCE<- SCENdat %>%
filter(grepl("non metallic", tolower(Variable), fixed=T))
SCENCEProd <-   SCENCE %>%
filter(grepl("production", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Material"), sep = "[|]") %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Material), position="stack", colour="black") +
labs(title="Production",
x="Year",
y="Mt/Yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENCEProd)
```
### Capacity
Unmapped still
### Final Energy
Unmapped still
## Chemical Industry {.tabset}
### CO2 Emissions
```{r nonen-emis, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=5}
SCENCHEM <- SCENdat %>%
filter(grepl("chemicals and petrochemicals", tolower(Variable), fixed=T))
SCENCHEMEMIS <-   SCENCHEM %>%
filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Type"), sep = "[|]") %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_line(aes(x=Year, y=value, colour=Scenario, group=Scenario)) +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Type, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENCHEMEMIS)
```
### Material Demand
This seems not mapped yet..
### Capacity / Feedstock
```{r Chemical, results=TRUE, message=FALSE, warning=FALSE, echo=FALSE, fig.width=9, fig.height=7}
SCENCHEM <- SCENdat %>%
filter(grepl("chemicals and petrochemicals", tolower(Variable), fixed=T))
SCENCHEMCAP <-   SCENCHEM %>%
filter(grepl("feedstock energy", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Technology"), sep = "[|]") %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Technology), position="stack", colour="black") +
labs(title="Non-energy demand",
x="Year",
y="GJ/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENCHEMCAP)
```
### Final Energy
```{r nonen-energy, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=7}
SCENNONEN <- SCENdat %>%
filter(grepl("chemicals and petrochemicals", tolower(Variable), fixed=T))
SCENNONENFINE <-   SCENNONEN %>%
filter(grepl("final energy", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Carrier"), sep = "[|]") %>%
filter(!is.na(Carrier)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Carrier), position="stack", colour="black") +
labs(title="Final Energy Use",
x="Year",
y="EJ/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENNONENFINE)
```
HVC emissions variable seems not reported
## Pulp & Paper Industry {.tabset}
### CO2 Emissions
Deep negative emissions in Circ and DemandMan?
```{r ppi-emis, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=5}
SCENPPI <- SCENdat %>%
filter(grepl("pulp and paper", tolower(Variable), fixed=T))
SCENPPIEMIS <-   SCENPPI %>%
filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Type"), sep = "[|]") %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_line(aes(x=Year, y=value, colour=Scenario, group=Scenario)) +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Type, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENPPIEMIS)
```
### Material Demand
Data not working / erroneously mapped
<!-- ```{r ppi-material, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=7} -->
<!-- SCENPPI <- SCENdat %>% -->
<!--     filter(grepl("pulp and paper", tolower(Variable), fixed=T))  -->
<!-- SCENPPIProd <-   SCENPPI %>% -->
<!--     filter(grepl("production", tolower(Variable), fixed=T)) %>% -->
<!--     separate(Variable, c("X", "Y", "Industry", "Food"), sep = "[|]") %>% -->
<!--   filter(!Food=="Total") %>% -->
<!--     filter(Region=="EU" ) %>% -->
<!--     ggplot()+ -->
<!--     geom_area(aes(x=Year, y=value, fill=Food), position="stack", colour="black") + -->
<!--      labs(title="Production", -->
<!--         x="Year", -->
<!--         y="Mt/Yr") + -->
<!--     facet_wrap(~ Scenario, ncol=2) + -->
<!--          theme(axis.text.x = element_text(angle=45, hjust=1), -->
<!--                text = element_text(size=14)) -->
<!--  ggplotly(SCENPPIProd) -->
<!-- ``` -->
### Capacity / Feedstock
```{r ppi, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=11, fig.height=7}
SCENPPI <- SCENdat %>%
filter(grepl("pulp and paper", tolower(Variable), fixed=T))
SCENPPICAP <-   SCENPPI %>%
filter(grepl("capacity", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Type", "Technology", "Carrier"), sep = "[|]") %>%
mutate(Technology=paste(Technology, Carrier)) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Technology), position="stack", colour="black") +
labs(title="Energy demand",
x="Year",
y="MWth") +
facet_grid(Type~ Scenario) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENPPICAP)
```
### Final Energy
```{r ppi-energy, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=7}
SCENPPI <- SCENdat %>%
filter(grepl("pulp and paper", tolower(Variable), fixed=T))
SCENPPIFINE <-   SCENPPI %>%
filter(grepl("final energy", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Carrier"), sep = "[|]") %>%
filter(!is.na(Carrier)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Carrier), position="stack", colour="black") +
labs(title="Final Energy Use",
x="Year",
y="EJ/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENPPIFINE)
```
## Food Industry {.tabset}
### CO2 Emissions
```{r food-emis, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=5}
SCENFOOD <- SCENdat %>%
filter(grepl("food", tolower(Variable), fixed=T))
SCENFOODEMIS <-   SCENFOOD %>%
filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Type"), sep = "[|]") %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_line(aes(x=Year, y=value, colour=Scenario, group=Scenario)) +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Type, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENFOODEMIS)
```
### Material Demand
```{r food-material, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=7}
SCENFood <- SCENdat %>%
filter(grepl("food", tolower(Variable), fixed=T))
SCENFoodProd <-   SCENFood %>%
filter(grepl("production", tolower(Variable), fixed=T)) %>%
filter(grepl("minor", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Z", "Food"), sep = "[|]") %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Food), position="stack", colour="black") +
labs(title="Production",
x="Year",
y="Mt/Yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENFoodProd)
```
### Capacity / Feedstock
```{r food, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=11, fig.height=7}
SCENFood <- SCENdat %>%
filter(grepl("food", tolower(Variable), fixed=T))
SCENFoodCAP <-   SCENFood %>%
filter(grepl("capacity", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Z", "Type", "Technology", "Carrier"), sep = "[|]") %>%
mutate(Technology=paste(Technology, Carrier)) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Technology), position="stack", colour="black") +
labs(title="Energy demand",
x="Year",
y="MWth") +
facet_grid(Type~ Scenario) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENFoodCAP)
```
### Final Energy
```{r food-energy, echo=FALSE, results=TRUE, message=FALSE, warning=FALSE, fig.width=9, fig.height=7}
SCENFOOD <- SCENdat %>%
filter(grepl("food", tolower(Variable), fixed=T))
SCENFOODFINE <-   SCENFOOD %>%
filter(grepl("final energy", tolower(Variable), fixed=T)) %>%
filter(!grepl("electricity|", tolower(Variable), fixed=T)) %>%
filter(!grepl("heat|", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Industry", "Carrier"), sep = "[|]") %>%
filter(!is.na(Carrier)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, fill=Carrier), position="stack", colour="black") +
labs(title="Final Energy Use",
x="Year",
y="EJ/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(SCENFOODFINE)
```
#######################################################################################################################
# THIS FILE: Analyses all the REINVENT narrative scenarios
# DATE: May 2020
#######################################################################################################################
# # Clear memory
# rm(list=ls()) # clear memory
#
# # Working directory
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#
setwd("/mnt/y/Kennisbasis/IMAGE/model/users/mariesse/R/GitHub/marieyesse.github.io-master/marieyesse.github.io")
#######################################################################################################################
### Install and/or load required packages / dependencies
#######################################################################################################################
# Easy scripting packages
if(!require(dplyr)){install.packages("dplyr");   library(dplyr)}
if(!require(forcats)){install.packages("forcats");  library(forcats)}
if(!require(data.table)){install.packages("data.table");  library(data.table)}
if(!require(tidyr)){install.packages("tidyr");  library(tidyr)}
if(!require(fuzzyjoin)){install.packages("fuzzyjoin");  library(fuzzyjoin)}
if(!require(stringr)){install.packages("stringr");  library(stringr)}
if(!require(rlang)){install.packages("rlang");  library(rlang)}
if(!require(readr)){install.packages("readr");  library(readr)}
# text mining packages
if(!require(tidytext)){install.packages("tidytext");  library(tidytext)}
if(!require(tm)){install.packages("tm");  library(tm)}
if(!require(readxl)){install.packages("readxl");  library(readxl)}
if(!require(tabulizer)){install.packages("tabulizer");  library(tabulizer)}
# maps
if(!require(grid)){install.packages("grid"); library(grid)}
if(!require(rworldmap)){install.packages("rworldmap");  library(rworldmap)}
if(!require(geosphere)){install.packages("geosphere"); library(geosphere)}
if(!require(gpclib)){install.packages("gpclib"); library(gpclib)}
# data visualisation packages
if(!require(ggplot2)){install.packages("ggplot2");  library(ggplot2)}
if(!require(ggforce)){install.packages("ggforce");  library(ggforce)}
if(!require(plotly)){install.packages("plotly");  library(plotly)}
if(!require(paletteer)){install.packages("paletteer");  library(paletteer)}
if(!require(ggrepel)){install.packages("ggrepel");  library(ggrepel)}
if(!require(igraph)){install.packages("igraph");  library(igraph)}
if(!require(ggraph)){install.packages("ggraph");  library(ggraph)}
if(!require(ggforce)){install.packages("ggforce");  library(ggforce)}
if(!require(shadowtext)){install.packages("shadowtext");  library(shadowtext)}
#if(!require(animation)){install.packages("animation");  library(animation)}
# MyM cnversion packages
#if(!require(mym2r)){install_github("marieyesse/mym2r");  library(mym2r)}
SCEN_xlsx <-list.files(path = "../../../../../harmensytze/Projects/REINVENT/7_Reporting_Tool/outxlsx/")
SCENSdat_list <- lapply(SCEN_xlsx, function(x){
dat <- read_xlsx(path=paste("../../../../../harmensytze/Projects/REINVENT/7_Reporting_Tool/outxlsx/", x, sep=""))
dat$Scenario <- x
dat=data.table(dat)
})
SCEN_xlsx <-list.files(path = "../../../../../harmensytze/Projects/REINVENT/7_Reporting_Tool/outxlsx/")
SCENSdat_list <- lapply(SCEN_xlsx, function(x){
dat <- read_xlsx(path=paste("../../../../../harmensytze/Projects/REINVENT/7_Reporting_Tool/outxlsx/", x, sep=""))
dat$Scenario <- x
dat=data.table(dat)
})
SCENdat <- rbindlist(SCENSdat_list, fill=TRUE) %>%
drop_na(Model) %>%
gather(Year, value, -c(Model, Scenario, Region, Variable, Unit)) %>%
mutate(Year=as.numeric(Year), value=as.numeric(value)) %>%
mutate(Scenario=gsub(".xlsx", "", Scenario, fixed=T)) %>%
drop_na(Year) %>%
bind_rows({.} %>% filter(Region %in% c("WEU", "CEU")) %>%
group_by(Model, Scenario, Variable, Unit, Year) %>%
summarise(value=sum(value)) %>%
mutate(Region="EU")) %>%
filter(!Region == "World") %>%
bind_rows({.} %>% filter(!Region %in% c( "EU")) %>%
group_by(Model, Scenario, Variable, Unit, Year) %>%
summarise(value=sum(value)) %>%
mutate(Region="World"))
SCENINDUS <- SCENdat %>%
filter(grepl("industry", tolower(Variable), fixed=T))
SCEN_xlsx <-list.files(path = "../../../../../harmensytze/Projects/REINVENT/7_Reporting_Tool/outxlsx/")
SCENSdat_list <- lapply(SCEN_xlsx, function(x){
dat <- read_xlsx(path=paste("../../../../../harmensytze/Projects/REINVENT/7_Reporting_Tool/outxlsx/", x, sep=""))
dat$Scenario <- x
dat=data.table(dat)
})
SCENSdat_list <- lapply(SCEN_xlsx, function(x){
dat <- read_xlsx(path=paste("../../../../../harmensytze/Projects/REINVENT/7_Reporting_Tool/outxlsx/", x, sep=""))
dat$Scenario <- x
dat=data.table(dat)
})
SCENdat <- rbindlist(SCENSdat_list, fill=TRUE) %>%
drop_na(Model) %>%
gather(Year, value, -c(Model, Scenario, Region, Variable, Unit)) %>%
mutate(Year=as.numeric(Year), value=as.numeric(value)) %>%
mutate(Scenario=gsub(".xlsx", "", Scenario, fixed=T)) %>%
drop_na(Year) %>%
bind_rows({.} %>% filter(Region %in% c("WEU", "CEU")) %>%
group_by(Model, Scenario, Variable, Unit, Year) %>%
summarise(value=sum(value)) %>%
mutate(Region="EU")) %>%
filter(!Region == "World") %>%
bind_rows({.} %>% filter(!Region %in% c( "EU")) %>%
group_by(Model, Scenario, Variable, Unit, Year) %>%
summarise(value=sum(value)) %>%
mutate(Region="World"))
SCENINDUS <- SCENdat %>%
filter(grepl("industry", tolower(Variable), fixed=T))
View(SCENdat)
INDUSDEM <- SCENdat %>%
filter(grepl("Emissions|CO2|Energy|Demand|", tolower(Variable), fixed=T))
ggplotly(INDUSDEMTot)
INDUSDEM
INDUSDEM <- SCENdat %>%
filter(grepl("Emissions|CO2|Energy|Demand|", Variable, fixed=T))
INDUSDEM
INDUSDEMTot <-   INDUSDEM %>%
#filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
#filter(!grepl("cokes", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Z", "A", "Industry", "TMI"), sep = "[|]") %>%
filter(is.na(TMI)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_line(aes(x=Year, y=value, colour=Industry, group=Industry)) +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(INDUSDEMTot)
INDUSDEMTot <-   INDUSDEM %>%
#filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
#filter(!grepl("cokes", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Z", "A", "Industry", "TMI"), sep = "[|]") %>%
filter(is.na(TMI)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, colour=Industry, group=Industry), stat="count", position="stack") +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(INDUSDEMTot)
INDUSDEMTot <-   INDUSDEM %>%
#filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
#filter(!grepl("cokes", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Z", "A", "Industry", "TMI"), sep = "[|]") %>%
filter(is.na(TMI)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value, colour=Industry, group=Industry), position="stack") +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(INDUSDEMTot)
INDUSDEMTot <-   INDUSDEM %>%
#filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
#filter(!grepl("cokes", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Z", "A", "Industry", "TMI"), sep = "[|]") %>%
filter(is.na(TMI)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_area(aes(x=Year, y=value,  fill=Industry), position="stack", colour="black") +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Scenario, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(INDUSDEMTot)
INDUSDEMTot <-   INDUSDEM %>%
#filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
#filter(!grepl("cokes", tolower(Variable), fixed=T)) %>%
separate(Variable, c("X", "Y", "Z", "A", "Industry", "TMI"), sep = "[|]") %>%
filter(is.na(TMI)==T) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_line(aes(x=Year, y=value,  group=Scenario, colour=Scenario)) +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Industry, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(INDUSDEMTot)
ECONCO2 <- SCENdat %>%
filter(grepl("Emissions|CO2", Variable, fixed=T))
head(ECONCO2)
unique(ECONCO2$Variable)
ECONCO2 %>%
#filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
filter(!grepl("Emissions|CO2|",Variable, fixed=T))
ECONCO2Tot <-   ECONCO2 %>%
#filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
filter(!grepl("Emissions|CO2|",Variable, fixed=T)) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_line(aes(x=Year, y=value,  group=Scenario, colour=Scenario)) +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Variable, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ECONCO2Tot <-   ECONCO2 %>%
#filter(grepl("emissions", tolower(Variable), fixed=T)) %>%
filter(!grepl("Emissions|CO2|",Variable, fixed=T)) %>%
filter(Region=="EU" ) %>%
ggplot()+
geom_line(aes(x=Year, y=value,  group=Scenario, colour=Scenario)) +
labs(title="CO2 Emissions",
x="Year",
y="MtCO2/yr") +
facet_wrap(~ Variable, ncol=2) +
theme(axis.text.x = element_text(angle=45, hjust=1),
text = element_text(size=14))
ggplotly(ECONCO2Tot)
