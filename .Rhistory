#Compound rate calculation
WISEECO2share.cr= WISEECO2share.cr %>% mutate(CR=(1-((value.x/value.y)^(1/(Year.x-Year.y))))*100)
WISEECO2share.cr=data.table(WISEECO2share.cr)
WISEECO2share.cr=WISEECO2share.cr[Year.x %in% c("2030", "2050")]
WISEECO2share.cr$identifier <- paste(WISEECO2share.cr$Year.x, WISEECO2share.cr$Year.y)
# Combining IMAGE and WISEE
INDUSEMISSCOMPOUND=rbind(CO2indexcalc.cr[,-c("Unit", "Region")], WISEECO2share.cr[Variable=="Emissions|CO2", -c("Variable")])
INDUSEMISSCOMPOUND=INDUSEMISSCOMPOUND[, -c("Year.x", "value.x", "Year.y", "value.y")]
#INDUSEMISSCOMPOUND=spread(INDUSEMISSCOMPOUND, identifier, CR)
INDUSEMISSCOMPOUND=INDUSEMISSCOMPOUND[!CR >50]
INDUSEMISSCOMPOUNDminmax=INDUSEMISSCOMPOUND[,list(ymax=max(CR,na.rm = TRUE),ymin=min(CR,na.rm = TRUE)),by=c("Study","Sector", "identifier")]
## BAR chart
INDUSCOMPOUNDby=ggplot() +
geom_crossbar(data=INDUSEMISSCOMPOUNDminmax[identifier %in% c("2030 2015", "2050 2030")], aes(x=as.factor(Sector), ymin=ymin, ymax=ymax, y=(ymax), fill=Study, colour=Study), width=0.5, position=position_dodge(width=0.8))+
facet_wrap(~identifier, scales="free_y") +
theme_bw() +
#coord_cartesian(ylim = c(0:12)) +
ggtitle("Efficiency improvement rate") +
labs(y="Efficiency improvement (%/p.a.)", x = "Year") +
guides(fill=guide_legend("Sector"))+
scale_fill_manual(values=c('#2ca25f','blue'),
breaks = c("IMAGE", "WISEE")) +
scale_colour_manual(values=c('#2ca25f','blue'),
breaks = c("IMAGE", "WISEE")) +
GROBTHEME
print(INDUSCOMPOUNDby)
# Clear memory
rm(list=ls()) # clear memory
####### Set working directory (all files should be in same level as script)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source(file="Scenarios/REINVENT_scenario_analysis.R")
setwd("/mnt/y/Kennisbasis/IMAGE/model/users/mariesse/R/REINVENT/DEVELOPMENT")
setwd("/mnt/public/sluisveldvm/ontwapps/Timer/Users/Mariesse/R/REINVENT/DEVELOPMENT/")
source(file="Scenarios/REINVENT_scenario_analysis.R")
setwd("E:/UU/R/github/marieyesse.github.io")
setwd("E:/UU/R/Resume/cv-master")
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
WISEECO2_0= read.csv("data/WISEE_CO2_emissions_22_6_2018.csv", sep=";", dec=",")
WISEECO2=melt(WISEECO2_0,  id.vars=c("Model", "Sector", "Variable","Scenario"), variable.name="Year")
WISEECO2$Year = as.numeric(as.character(substr(WISEECO2$Year, 2, stop=100)))
WISEECO2$value = as.numeric(WISEECO2$value)
#WISEECO2 <- na.omit(WISEECO2)
WISEECO2=data.table(WISEECO2)
WISEECO2=spread(WISEECO2, Year, value)
setnames(WISEECO2, "2015", "X2015")
setnames(WISEECO2, "2030", "X2030")
setnames(WISEECO2, "2050", "X2050")
WISEECO2 = WISEECO2 %>% mutate(RED2030=(1-(X2030/X2015))*100, RED2050=(1-(X2050/X2015))*100)
WISEECO2=data.table(WISEECO2)
WISEECO2=WISEECO2[Sector=="Chemical", Sector:=c("Chemicals and Petrochemicals")]
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".")
ALLVAR$value <- as.numeric(ALLVAR$value)
ALLVAR$Year <- as.numeric(ALLVAR$Year)
ALLVAR=data.table(ALLVAR)
CO2TAB= ALLVAR[ Variable %in% c(
"Emissions|CO2|Iron and Steel|Direct emissions",
"Emissions|CO2|Pulp and Paper|Direct emissions",
"Emissions|CO2|Chemicals and Petrochemicals|Direct emissions",
"Emissions|CO2|Food Processing|Direct emissions"
) & Year %in% c("2015", "2030", "2050") & Region=="EU28"]
CO2TAB$Variable <- gsub("|Direct emissions", "", CO2TAB$Variable, fixed=T )
CO2TAB$Variable <- gsub("Emissions|CO2|", "", CO2TAB$Variable, fixed=T )
CO2TAB=spread(CO2TAB, Year, value)
setnames(CO2TAB, "2015", "X2015")
setnames(CO2TAB, "2030", "X2030")
setnames(CO2TAB, "2050", "X2050")
CO2TAB=CO2TAB %>% mutate(RED2050=(1-(X2050/X2015))*100, RED2030=(1-(X2030/X2015))*100)
setnames(CO2TAB, "Variable", "Sector")
CO2REDTAB = rbind(WISEECO2[Variable=="Emissions|CO2", c("Model","Sector", "Scenario", "RED2030", "RED2050")],CO2TAB[, c("Sector", "Scenario", "Model", "RED2030", "RED2050")] )
CO2REDTAB2=gather(CO2REDTAB, RED, value, c(RED2030, RED2050))
#write.table(file="datatables/overview_table_indicators_CO2RED.csv", CO2REDTAB2, sep=",", dec=".", row.names=FALSE)
CO2REDTAB2=rbind(CO2REDTAB2, data.table(Model=c("WISEE", "WISEE"),
Sector=c("Food Processing","Food Processing"),
Scenario=c("CIRC", "CCS"),
RED=c("RED2030", "RED2050"),
value=c(0,0)))
CO2REDTAB2=data.table(CO2REDTAB2)
CO2REDTABminmax=CO2REDTAB2[!Scenario=="Baseline",list(ymax=max(value,na.rm = TRUE),ymin=min(value,na.rm = TRUE)),by=c("Model","Sector", "RED")]
CO2REDTABminmax$Variable <- "CO2 Emissions"
## FINAL ENERGY REDUCTIONS
FINETABRED=ALLVAR[Variable %in% c("Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing"
) & Year %in% c("2015", "2030", "2050") & Region=="EU28"]
FINETABRED$Variable <- gsub("Final Energy|Industry|", "", FINETABRED$Variable, fixed=TRUE)
setnames(FINETABRED,"Variable", "Sector")
FINETABRED=spread(FINETABRED, Year, value)
setnames(FINETABRED, "2015", "X2015")
setnames(FINETABRED, "2030", "X2030")
setnames(FINETABRED, "2050", "X2050")
FINETABRED=FINETABRED %>% mutate(RED2050=(1-(X2050/X2015))*100, RED2030=(1-(X2030/X2015))*100)
FINEREDTAB = rbind(WISEECO2[Variable=="Final Energy", c("Model","Sector", "Scenario", "RED2030", "RED2050")],FINETABRED[, c("Sector", "Scenario", "Model", "RED2030", "RED2050")] )
FINEREDTAB2=gather(FINEREDTAB, RED, value, c(RED2030, RED2050))
FINEREDTAB2=data.table(FINEREDTAB2)
FINEREDTAB2=rbind(FINEREDTAB2, data.table(Model=c("WISEE", "WISEE"),
Sector=c("Food Processing","Food Processing"),
Scenario=c("CIRC", "CCS"),
RED=c("RED2030", "RED2050"),
value=c(0,0)))
FINEREDTABminmax=FINEREDTAB2[!Scenario=="Baseline",list(ymax=max(value,na.rm = TRUE),ymin=min(value,na.rm = TRUE)),by=c("Model","Sector", "RED")]
FINEREDTABminmax$Variable <- "Energy Use"
## PRODUCTVOLUME
PRODVOLTAB=ALLVAR[Variable %in% c("Chemical|HVC|Total Demand",
"Pulp and Paper|Total",
"Iron and Steel|Crude Steel",
"Food Processing|Total"
) & Year %in% c("2015", "2030","2050") & Region=="EU28"]
PRODVOLTAB$Variable <- gsub("Production|Industry|", "", PRODVOLTAB$Variable, fixed=TRUE)
PRODVOLTAB$Variable <- gsub("|HVC|Total Demand", "", PRODVOLTAB$Variable, fixed=TRUE)
PRODVOLTAB$Variable <- gsub("|Total", "", PRODVOLTAB$Variable, fixed=TRUE)
PRODVOLTAB$Variable <- gsub("|Crude Steel", "", PRODVOLTAB$Variable, fixed=TRUE)
setnames(PRODVOLTAB,"Variable", "Sector")
PRODVOLTAB=spread(PRODVOLTAB, Year, value)
setnames(PRODVOLTAB, "2015", "X2015")
setnames(PRODVOLTAB, "2030", "X2030")
setnames(PRODVOLTAB, "2050", "X2050")
PRODVOLTABRED=PRODVOLTAB %>% mutate(RED2050=(1-(X2050/X2015))*100, RED2030=(1-(X2030/X2015))*100)
PRODVOLTABRED = rbind(WISEECO2[Variable=="Production", c("Model","Sector", "Scenario",  "RED2030", "RED2050")],PRODVOLTABRED[, c("Sector", "Scenario", "Model", "RED2030", "RED2050")] )
PRODVOLTABRED=PRODVOLTABRED[Sector=="Chemical", Sector:=c("Chemicals and Petrochemicals")]
PRODVOLTABRED2=gather(PRODVOLTABRED, RED, value, c(RED2030, RED2050))
PRODVOLTABRED2=data.table(PRODVOLTABRED2)
PRODVOLTABRED2=rbind(PRODVOLTABRED2, data.table(Model=c("WISEE", "WISEE"),
Sector=c("Food Processing","Food Processing"),
Scenario=c("CIRC", "CCS"),
RED=c("RED2030", "RED2050"),
value=c(0,0)))
PRODVOLTABREDminmax=PRODVOLTABRED2[!Scenario=="Baseline",list(ymax=max(value,na.rm = TRUE),ymin=min(value,na.rm = TRUE)),by=c("Model","Sector", "RED")]
PRODVOLTABREDminmax$Variable <- "Production volume"
###
MINMAX2050=ggplot()+
geom_crossbar(data=CO2REDTABminmax[RED=="RED2050"], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Model, colour=Model), width=.7, position=position_dodge(width=0.7))+
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
annotate("text", x=1.3,y=104, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=1.3, y=35, label="Reductions", size=3, angle=90, colour="dimgrey",  hjust=0) +
annotate("text", x=1.3, y=-5, label="Increase", size=3, angle=90, colour="dimgrey",  hjust=1) +
geom_crossbar(data=CO2REDTABminmax[RED=="RED2050"], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Model, colour=Model),  width=.7, position=position_dodge(width=0.7))+
geom_crossbar(data=FINEREDTABminmax[RED=="RED2050"], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Model, colour=Model),  width=.7, position=position_dodge(width=0.7))+
geom_crossbar(data=PRODVOLTABREDminmax[RED=="RED2050"], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Model, colour=Model),  width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Reduction \n ")+
facet_wrap(~Variable)+
scale_fill_manual(
breaks=c("IMAGE", "WISEE"),
values=c('blue', '#2ca25f'))+
scale_colour_manual(
breaks=c("IMAGE", "WISEE"),
values=c('blue', '#2ca25f')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(-40:150)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
ggplotly(MINMAX2050)
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
WISEECO2_0= read.csv("data/WISEE_CO2_emissions_22_6_2018.csv", sep=";", dec=",")
WISEECO2=melt(WISEECO2_0,  id.vars=c("Model", "Sector", "Variable","Scenario"), variable.name="Year")
WISEECO2$Year = as.numeric(as.character(substr(WISEECO2$Year, 2, stop=100)))
WISEECO2$value = as.numeric(WISEECO2$value)
#WISEECO2 <- na.omit(WISEECO2)
WISEECO2=data.table(WISEECO2)
WISEECO2015=WISEECO2[Year=="2015"]
WISEECO2=merge(WISEECO2,WISEECO2015, by=c("Model", "Sector", "Variable", "Scenario"), allow.cartesian=T)
WISEECO2 = WISEECO2 %>% mutate(RED=(1-(value.x/value.y))*100)
WISEECO2=data.table(WISEECO2)
WISEECO2=WISEECO2[Sector=="Chemical", Sector:=c("Chemicals and Petrochemicals")]
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".")
ALLVAR$value <- as.numeric(ALLVAR$value)
ALLVAR$Year <- as.numeric(ALLVAR$Year)
ALLVAR=data.table(ALLVAR)
CO2TAB= ALLVAR[ Variable %in% c(
"Emissions|CO2|Iron and Steel|Direct emissions",
"Emissions|CO2|Pulp and Paper|Direct emissions",
"Emissions|CO2|Chemicals and Petrochemicals|Direct emissions",
"Emissions|CO2|Food Processing|Direct emissions"
) & Region=="EU28"]
CO2TAB$Variable <- gsub("|Direct emissions", "", CO2TAB$Variable, fixed=T )
CO2TAB$Variable <- gsub("Emissions|CO2|", "", CO2TAB$Variable, fixed=T )
CO2TAB2015=CO2TAB[Year=="2015"]
CO2TAB=merge(CO2TAB, CO2TAB2015, by=c("Variable", "Scenario", "Unit", "Model", "Region"), allow.cartesian = T)
CO2TAB=CO2TAB %>% mutate(RED=(1-(value.x/value.y))*100)
setnames(CO2TAB, "Variable", "Sector")
CO2REDTAB = rbind(WISEECO2[Variable=="Emissions|CO2", c("Model","Sector", "Scenario","Year.x", "RED")],CO2TAB[, c("Sector", "Scenario", "Model", "Year.x", "RED")] )
#write.table(file="datatables/overview_table_indicators_CO2RED.csv", CO2REDTAB2, sep=",", dec=".", row.names=FALSE)
CO2REDTAB2=rbind(CO2REDTAB, data.table(Model=c("WISEE", "WISEE"),
Sector=c("Food Processing","Food Processing"),
Scenario=c("CIRC", "CCS"),
RED=c(0, 0),
Year.x=c(2015, 2015)))
CO2REDTAB2=data.table(CO2REDTAB2)
CO2REDTABminmax=CO2REDTAB2[!Scenario=="Baseline",list(ymax=max(RED,na.rm = TRUE),ymin=min(RED,na.rm = TRUE)),by=c("Model","Sector", "Year.x")]
CO2REDTABminmax$Variable <- "CO2 Emissions"
## FINAL ENERGY REDUCTIONS
FINETABRED=ALLVAR[Variable %in% c("Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing"
) & Region=="EU28"]
FINETABRED$Variable <- gsub("Final Energy|Industry|", "", FINETABRED$Variable, fixed=TRUE)
setnames(FINETABRED,"Variable", "Sector")
FINETABRED2015=FINETABRED[Year=="2015"]
FINETABRED=merge(FINETABRED, FINETABRED2015, by=c("Sector", "Scenario", "Unit", "Model", "Region"), allow.cartesian = T)
FINETABRED=FINETABRED %>% mutate(RED=(1-(value.x/value.y))*100)
FINETABRED=data.table(FINETABRED)
FINEREDTAB2 = rbind(WISEECO2[Variable=="Final Energy", c("Model","Sector", "Scenario","Year.x", "RED")],FINETABRED[, c("Sector", "Scenario", "Model", "Year.x", "RED")] )
FINEREDTAB2=data.table(FINEREDTAB2)
FINEREDTAB2=rbind(FINEREDTAB2, data.table(Model=c("WISEE", "WISEE"),
Sector=c("Food Processing","Food Processing"),
Scenario=c("CIRC", "CCS"),
RED=c(0, 0),
Year.x=c(2015, 2015)))
FINEREDTABminmax=FINEREDTAB2[!Scenario=="Baseline",list(ymax=max(RED,na.rm = TRUE),ymin=min(RED,na.rm = TRUE)),by=c("Model","Sector", "Year.x")]
FINEREDTABminmax$Variable <- "Energy Use"
## PRODUCTVOLUME
PRODVOLTAB=ALLVAR[Variable %in% c("Chemical|HVC|Total Demand",
"Pulp and Paper|Total",
"Iron and Steel|Crude Steel",
"Food Processing|Total"
) &  Region=="EU28"]
PRODVOLTAB$Variable <- gsub("Production|Industry|", "", PRODVOLTAB$Variable, fixed=TRUE)
PRODVOLTAB$Variable <- gsub("|HVC|Total Demand", "", PRODVOLTAB$Variable, fixed=TRUE)
PRODVOLTAB$Variable <- gsub("|Total", "", PRODVOLTAB$Variable, fixed=TRUE)
PRODVOLTAB$Variable <- gsub("|Crude Steel", "", PRODVOLTAB$Variable, fixed=TRUE)
setnames(PRODVOLTAB,"Variable", "Sector")
PRODVOLTAB2015=PRODVOLTAB[Year=="2015"]
PRODVOLTAB=merge(PRODVOLTAB, PRODVOLTAB2015, by=c("Sector", "Scenario", "Unit", "Model", "Region"), allow.cartesian = T)
PRODVOLTABRED=PRODVOLTAB %>% mutate(RED=(1-(value.x/value.y))*100)
PRODVOLTABRED = rbind(WISEECO2[Variable=="Production", c("Model","Sector", "Scenario", "Year.x", "RED")],PRODVOLTABRED[, c("Sector", "Scenario", "Model", "Year.x","RED")] )
PRODVOLTABRED=PRODVOLTABRED[Sector=="Chemical", Sector:=c("Chemicals and Petrochemicals")]
PRODVOLTABRED=data.table(PRODVOLTABRED)
PRODVOLTABRED2=rbind(PRODVOLTABRED, data.table(Model=c("WISEE", "WISEE"),
Sector=c("Food Processing","Food Processing"),
Scenario=c("CIRC", "CCS"),
RED=c(0, 0),
Year.x=c(2015, 2015)))
PRODVOLTABREDminmax=PRODVOLTABRED2[!Scenario=="Baseline",list(ymax=max(RED,na.rm = TRUE),ymin=min(RED,na.rm = TRUE)),by=c("Model","Sector", "Year.x")]
PRODVOLTABREDminmax$Variable <- "Production volume"
options(digits=0)
###
MINMAX=ggplot()+
geom_crossbar(data=CO2REDTABminmax[Year.x %in% c(2015:2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Model, colour=Model), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
annotate("text", x=0.7,y=104, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.7, y=35, label="Reductions", size=3, angle=90, colour="dimgrey",  hjust=0) +
annotate("text", x=0.7, y=-5, label="Increase", size=3, angle=90, colour="dimgrey",  hjust=1) +
geom_crossbar(data=CO2REDTABminmax[Year.x %in% c(2015:2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Model, colour=Model),  width=.7, position=position_dodge(width=0.7))+
geom_crossbar(data=FINEREDTABminmax[Year.x %in% c(2015:2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Model, colour=Model),  width=.7, position=position_dodge(width=0.7))+
geom_crossbar(data=PRODVOLTABREDminmax[Year.x %in% c(2015:2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Model, colour=Model),  width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Reduction \n ")+
facet_wrap(~Variable)+
scale_fill_manual(
breaks=c("IMAGE", "WISEE"),
values=c('blue', '#2ca25f'))+
scale_colour_manual(
breaks=c("IMAGE", "WISEE"),
values=c('blue', '#2ca25f')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(-40:150)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
library("gganimate")
library("gifski")
library("glue")
MINMAXanimate <- MINMAX +
transition_components(Year.x) +
labs(title = 'Year: {substr(frame_time, 1,4)}')
MINMAXanimate
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(forcats)
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".")
ALLVAR=data.table(ALLVAR)
INDICATORSPROD=ALLVAR[Variable %in% c("Chemical|HVC|Total Demand",
"Pulp and Paper|Total",
"Iron and Steel|Crude Steel",
"Food Processing|Total")]
INDICATORSPROD$Indicator <- "Production"
INDICATORSPROD$Variable <- gsub("|Total", "", INDICATORSPROD$Variable, fixed=T )
INDICATORSPROD$Variable <- gsub("|Crude Steel", "", INDICATORSPROD$Variable, fixed=T )
INDICATORSPROD$Variable <- gsub("|HVC Demand", "", INDICATORSPROD$Variable, fixed=T )
INDICATORS= ALLVAR[ Variable %in% c(
"Emissions|CO2|Iron and Steel|Direct emissions",
"Emissions|CO2|Pulp and Paper|Direct emissions",
"Emissions|CO2|Chemicals and Petrochemicals|Direct emissions",
"Emissions|CO2|Food Processing|Direct emissions",
"Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing"
) ]
INDICATORS$Variable <- gsub("|Direct emissions", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("CO2|", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("Industry|", "", INDICATORS$Variable, fixed=T )
INDICATORSsplit<- data.frame(do.call('rbind', strsplit(as.character(INDICATORS$Variable),'|',fixed=TRUE)))
INDICATORS=cbind(INDICATORS,INDICATORSsplit$X1, INDICATORSsplit$X2)
INDICATORS$Variable <- NULL
setnames(INDICATORS, "V2", "Indicator")
setnames(INDICATORS, "V3", "Variable")
INDICATORS = rbind(INDICATORS, INDICATORSPROD)
INDICATORS2015=INDICATORS[Year=="2015"]
INDICATORS=merge(INDICATORS, INDICATORS2015, by=c("Variable", "Indicator","Scenario", "Unit", "Model", "Region"), allow.cartesian = T)
INDICATORS=INDICATORS %>% mutate(RED=(1-(value.x/value.y))*100)
setnames(INDICATORS, "Variable", "Sector")
INDICATORS=data.table(INDICATORS)
INDICATORSminmax=INDICATORS[!Scenario=="Baseline",list(ymax=max(RED,na.rm = TRUE),ymin=min(RED,na.rm = TRUE)),by=c("Model", "Sector","Indicator", "Region", "Unit", "Year.x")]
INDICATORSminmax=INDICATORSminmax[Sector=="Chemical", Sector:=c("Chemicals and Petrochemicals")]
INDICATORSminmax = INDICATORSminmax %>% mutate(
Sector=
fct_relevel(Sector, "Iron and Steel",  "Pulp and Paper", "Chemicals and Petrochemicals","Food Processing")
)
INDICATORSminmax=data.table(INDICATORSminmax)
options(digits=0)
###
MINMAXreg=ggplot()+
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
annotate("text", x=0.7,y=104, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.7, y=35, label="Reductions", size=3, angle=90, colour="dimgrey",  hjust=0) +
annotate("text", x=0.7, y=-5, label="Increase", size=3, angle=90, colour="dimgrey",  hjust=1) +
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Reduction \n ")+
facet_wrap(~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(-40:150)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
#print(MINMAXreg)
library("gganimate")
library("gifski")
library("glue")
MINMAXreg.animate <- MINMAXreg +
transition_time(Year.x) +
labs(title = 'Year: {frame_time}')
MINMAXreg.animate
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(forcats)
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".")
ALLVAR=data.table(ALLVAR)
INDICATORSPROD=ALLVAR[Variable %in% c("Chemical|HVC|Total Demand",
"Pulp and Paper|Total",
"Iron and Steel|Crude Steel",
"Food Processing|Total")]
INDICATORSPROD$Indicator <- "Production"
INDICATORSPROD$Variable <- gsub("|Total", "", INDICATORSPROD$Variable, fixed=T )
INDICATORSPROD$Variable <- gsub("|Crude Steel", "", INDICATORSPROD$Variable, fixed=T )
INDICATORSPROD$Variable <- gsub("|HVC Demand", "", INDICATORSPROD$Variable, fixed=T )
INDICATORS= ALLVAR[ Variable %in% c(
"Emissions|CO2|Iron and Steel|Direct emissions",
"Emissions|CO2|Pulp and Paper|Direct emissions",
"Emissions|CO2|Chemicals and Petrochemicals|Direct emissions",
"Emissions|CO2|Food Processing|Direct emissions",
"Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing"
) ]
INDICATORS$Variable <- gsub("|Direct emissions", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("CO2|", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("Industry|", "", INDICATORS$Variable, fixed=T )
INDICATORSsplit<- data.frame(do.call('rbind', strsplit(as.character(INDICATORS$Variable),'|',fixed=TRUE)))
INDICATORS=cbind(INDICATORS,INDICATORSsplit$X1, INDICATORSsplit$X2)
INDICATORS$Variable <- NULL
setnames(INDICATORS, "V2", "Indicator")
setnames(INDICATORS, "V3", "Variable")
INDICATORS = rbind(INDICATORS, INDICATORSPROD)
INDICATORS2015=INDICATORS[Year=="2015"]
INDICATORS=merge(INDICATORS, INDICATORS2015, by=c("Variable", "Indicator","Scenario", "Unit", "Model", "Region"), allow.cartesian = T)
INDICATORS=INDICATORS %>% mutate(RED=(1-(value.x/value.y))*100)
setnames(INDICATORS, "Variable", "Sector")
INDICATORS=data.table(INDICATORS)
INDICATORSminmax=INDICATORS[!Scenario=="Baseline",list(ymax=max(RED,na.rm = TRUE),ymin=min(RED,na.rm = TRUE)),by=c("Model", "Sector","Indicator", "Region", "Unit", "Year.x")]
INDICATORSminmax=INDICATORSminmax[Sector=="Chemical", Sector:=c("Chemicals and Petrochemicals")]
INDICATORSminmax = INDICATORSminmax %>% mutate(
Sector=
fct_relevel(Sector, "Iron and Steel",  "Pulp and Paper", "Chemicals and Petrochemicals","Food Processing")
)
INDICATORSminmax=data.table(INDICATORSminmax)
options(digits=0)
###
MINMAXreg=ggplot()+
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
annotate("text", x=0.7,y=104, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.7, y=35, label="Reductions", size=3, angle=90, colour="dimgrey",  hjust=0) +
annotate("text", x=0.7, y=-5, label="Increase", size=3, angle=90, colour="dimgrey",  hjust=1) +
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Reduction \n ")+
facet_wrap(~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(-40:150)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
#print(MINMAXreg)
library("gganimate")
library("gifski")
library("glue")
MINMAXreg.animate <- MINMAXreg +
transition_time(Year.x) +
labs(title = 'Year: {frame_time}')
MINMAXreg.animate
