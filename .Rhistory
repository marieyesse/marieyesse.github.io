#   geom_vline(xintercept=2050, linetype=2) +
#   geom_label(data=DIFF1.5merge[Scenario=="2 Degrees" & Region %in% c("EU28") & Year=="2050" &
#                                  !Variable %in% c("Secondary Energy|Electricity",
#                                                   "Final Energy|industry",
#                                                   "Final Energy|Transportation")],  aes(x=2050, y=value, label=Variable),  position=position_stack(vjust = 0.5), size=3, alpha=1) +
#   facet_grid(Scenario~Sector) +
#   ggtitle("Secondary energy produced or used per sector") +
#   labs(y="EJ/yr", x = "Year") +
#
#   coord_cartesian(xlim=c(2010:2055), ylim=c(0:25))+
#   GROBTHEME
#
# print(SECTORplot2C)
#
# png("figures/Sector_EC_plot_2C.png", width=800, height=600)
# print(SECTORplot2C)
# dev.off()
# ggsave("figures/Sector_EC_plot_2C.png.pdf", width=8, height=6, unit="in")
#
DIFF1.5emis=ALLVAR[Scenario %in% c("2 Degrees", "1.5 Degrees", "Baseline")]
DIFF1.5emis=DIFF1.5emis[Variable %in% c(
# Emissions
"Emissions|Kyoto Gases",
"Emissions|CO2",
"Emissions|CO2|Iron and Steel|Direct emissions",
"Emissions|CO2|Cement|Direct emissions",
"Emissions|CO2|Pulp and Paper|Direct emissions",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand|Industry",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand",
"Emissions|CO2|Fossil Fuels and Industry",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand|Industry",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand|Other Sector",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand|Residential and Commercial",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand|Transportation",
"Emissions|CO2|Fossil Fuels and Industry|Energy Supply|Electricity",
"Emissions|CO2|Land Use",
"Emissions|CO2|Carbon Capture and Storage|Biomass|Energy|Supply|Electricity",
"Emissions|CO2|Carbon Capture and Storage|Biomass|Energy|Demand|Industry",
"Emissions|CO2|Carbon Capture and Storage|Fossil|Energy|Supply|Electricity",
"Emissions|CO2|Carbon Capture and Storage|Fossil|Energy|Demand|Industry",
"Emissions|CO2|Carbon Capture and Storage|Biomass|Industrial Processes|Pulp and Paper",
"Emissions|CO2|Carbon Capture and Storage|Fossil|Industrial Processes|Pulp and Paper",
"Emissions|CO2|Carbon Capture and Storage|Biomass|Industrial Processes|Iron and Steel",
"Emissions|CO2|Carbon Capture and Storage|Fossil|Industrial Processes|Iron and Steel",
"Emissions|CO2|Chemicals and Petrochemicals|Direct emissions",
"Emissions|CO2|Chemicals and Petrochemicals|HVC|Direct emissions",
"Emissions|CO2|Food Processing|Direct emissions"
)]
DIFF1.5emis$Variable <- gsub("Emissions|CO2|Fossil Fuels and Industry|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Emissions|CO2|Carbon Capture and Storage|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Energy|Supply|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Energy|Demand|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Energy Demand|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Energy Supply|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Emissions|CO2|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Emissions|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Emissions|", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("|Direct emissions", "", DIFF1.5emis$Variable, fixed=TRUE)
DIFF1.5emis$Variable <- gsub("Industrial Processes|", "", DIFF1.5emis$Variable, fixed=TRUE)
setnames(DIFF1.5emis, "Year.x", "Year")
#### WISEE MODEL DATA
####### Set working directory (all files should be in same level as script)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
WISEECO2_0= read.csv("WISEE_CO2_emissions_22_6_2018.csv", sep=";", dec=",")
WISEECO2=melt(WISEECO2_0,  id.vars=c("Model", "Variable","Sector","Scenario"), variable.name="Year")
WISEECO2$Year = as.numeric(as.character(substr(WISEECO2$Year, 2, stop=100)))
WISEECO2$value = as.numeric(WISEECO2$value)
#WISEECO2 <- na.omit(WISEECO2)
WISEECO2=data.table(WISEECO2)
WISEECO2=WISEECO2[Variable=="Emissions|CO2"]
WISEECO2$Variable <- NULL
WISEECO2$Unit <- "Mt/yr"
setnames(WISEECO2, "Sector", "Variable")
WISEECO2$Region <- "EU28"
DIFF1.5emis=rbind(DIFF1.5emis, WISEECO2)
### GGPLOT WISEE/IMAGE
### Per sector emission pathways
WISEE_IMAGEPPI=ggplot(data=DIFF1.5emis[Variable %in% c("Pulp and Paper"
) & !Scenario%in% c("Baseline") & Region=="EU28"])+
geom_line(
aes(x=Year, y=value, group=Scenario, colour=Model, linetype=Scenario), size=1)+
geom_hline(yintercept=0, linetype=2) +
xlab("Year") + ylab(bquote("Mt"~CO[2]*"/yr")) + ggtitle(bquote(bold(CO[2]~"emissions"))) +
coord_cartesian(xlim = c(2015:2050), ylim=c(-50:40))  +
facet_wrap(~Variable, scales="free", ncol=2) +
scale_colour_manual(values=c('#d7191c','#2c7bb6')) +
scale_linetype_manual(values=c(1,4,1,4))+
GROBTHEME
# theme(legend.position="bottom")+
# guides(colour=guide_legend(ncol=1,byrow=TRUE))
print(WISEE_IMAGEPPI)
png("figures/WISEE_IMAGEPPI_CO2.png", width=500, height=400)
print(WISEE_IMAGEPPI)
dev.off()
ggsave("figures/WISEE_IMAGEPPI_CO2.pdf", width=12, height=15, unit="in")
###################### CAPTURED EMISSIONS VS TOTAL EMITTED
CEMIS=DIFF1.5emis
CEMIS.intrapolate=seq(unique(DIFF1.5emis$Year)[1],2100) #unique(sdt$Year)[length(unique(sdt$Year))]
## Activate data.table package ###
CEMISreal=data.table(CEMIS)
#Intrapolatie with approximate
CEMISreal = CEMISreal[,list(approx(x=Year,y=value,xout=CEMIS.intrapolate)$y,approx(x=Year,y=value,xout=CEMIS.intrapolate)$x),by=c('Model','Scenario','Region','Variable', "Unit")]
setnames(CEMISreal,"V1","value")
setnames(CEMISreal,"V2","Year")
## sommering
CEMISrealsum10=CEMISreal[Year %in% c(2010),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum10$Year <- "2010"
CEMISrealsum20=CEMISreal[Year %in% c(2010:2020),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum20$Year <- "2020"
CEMISrealsum30=CEMISreal[Year %in% c(2010:2030),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum30$Year <- "2030"
CEMISrealsum40=CEMISreal[Year %in% c(2010:2040),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum40$Year <- "2040"
CEMISrealsum50=CEMISreal[Year %in% c(2010:2050),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum50$Year <- "2050"
CEMISrealsum60=CEMISreal[Year %in% c(2010:2060),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum60$Year <- "2060"
CEMISrealsum70=CEMISreal[Year %in% c(2010:2070),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum70$Year <- "2070"
CEMISrealsum80=CEMISreal[Year %in% c(2010:2080),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum80$Year <- "2080"
CEMISrealsum90=CEMISreal[Year %in% c(2010:2090),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum90$Year <- "2090"
CEMISrealsum100=CEMISreal[Year %in% c(2010:2100),sum(value,na.rm=TRUE),by=c('Model','Scenario','Region','Variable', "Unit")]
CEMISrealsum100$Year <- "2100"
CEMISrealsum = rbind(CEMISrealsum10,CEMISrealsum20,CEMISrealsum30,CEMISrealsum40,CEMISrealsum50,CEMISrealsum60,CEMISrealsum70,CEMISrealsum80,CEMISrealsum90,CEMISrealsum100)
setnames(CEMISrealsum,"V1","value")
# Start counting from 2010 onwards
CEMISrealsumcor=merge(CEMISrealsum, CEMISrealsum10,by=c('Model','Scenario','Region','Variable', "Unit") )
CEMISrealsumcor=data.table(CEMISrealsumcor)
CEMISrealsumcor=CEMISrealsumcor %>% mutate(valuecor=(value - V1))
CEMISrealsumcor=data.table(CEMISrealsumcor)
CEMISrealsumcor=CEMISrealsumcor[, !c("value", "V1", "Year.y")]
setnames(CEMISrealsumcor, "Year.x", "Year")
setnames(CEMISrealsumcor, "valuecor", "value")
#
write.table(CEMISrealsumcor[Region %in% c("World", "EU28", "WEU", "CEU")], "datatables/cumulative_emissions.csv", sep=";", dec=".", row.names=FALSE)
### Per CO2 captured vs emitted
### Per CO2 captured vs emitted
# Totemis152Cworld=ggplot()+
#
#   #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
#   geom_area(data=CEMISrealsumcor[Variable %in% c("Biomass|Electricity","Biomass|Industry","Fossil|Industry","Fossil|Electricity") & Region %in% c("EU28", "World") & !Scenario=="Baseline"], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack", colour="black")+
#
#   geom_hline(yintercept=0, linetype=2) +
#   xlab("Year") + ylab(bquote("Mt"~CO[2])) + ggtitle(bquote(bold("Cumulative captured"~CO[2]~"emissions since 2015"))) +
#   coord_cartesian(xlim = c(2010:2100))  +
#   facet_grid(Region~Scenario, scales="free") +
#   GROBTHEME +
#   scale_fill_manual(breaks=c("Biomass|Electricity", "Biomass|Industry", "Fossil|Electricity", "Fossil|Industry", "Fossil Fuels and Industry"),
#                     labels=c("BECCS (power sector)", "BECCS (Industry)", "CCS (Power Sector)", "CCS (Industry)", "Emissions whole economy"),
#                     values=c('#edf8fb','#b2e2e2','grey','#2ca25f','#006d2c'))
#
# # theme(legend.position="bottom")+
# # guides(colour=guide_legend(ncol=1,byrow=TRUE))
#
# print(Totemis152Cworld)
#
# png("figures/Cumu_emis_captured_EU.png", width=600, height=400)
# print(Totemis152Cworld)
# dev.off()
# ggsave("figures/Cumu_emis_captured_EU.pdf", width=7, height=5, unit="in")
#
##########################################
### Offsetting
CEMISrealsumcorbase=CEMISrealsumcor[Scenario=="Baseline"]
CEMISrealsumcormerge=merge(CEMISrealsumcor, CEMISrealsumcorbase, by=c("Model", "Variable", "Region", "Unit", "Year") )
CEMISrealsumcormutate= CEMISrealsumcormerge %>% mutate(Diff=(value.y-value.x))
CEMISrealsumcormutate=data.table(CEMISrealsumcormutate)
setnames(CEMISrealsumcormutate, "Scenario.x", "Scenario")
CEMISrealsumcormutate$Region<- factor(CEMISrealsumcormutate$Region, levels=c( "EU28", "BRA","CAN","CHN","INDIA","JAP", "USA", "World" ))
CEMISrealsum$Region<- factor(CEMISrealsum$Region, levels=c( "EU28", "BRA","CAN","CHN","INDIA","JAP", "USA", "World"  ))
### Per CO2 captured vs emitted
#"Industry", "Electricity", "Transportation", "Residential and Commercial"
# "Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"
CUMUOFFSET=ggplot()+
geom_bar(data=CEMISrealsumcormutate[Variable %in% c("Biomass|Electricity","Biomass|Industry","Fossil|Industry","Fossil|Electricity") & Year %in% c("2030", "2050") & Region %in% c("EU28","JAP", "CHN", "INDIA", "BRA", "CAN", "USA") & !Scenario=="Baseline" ], aes(x=Region, y=Diff/1000, fill=Variable), stat="identity", position="stack", colour="black")+
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=Inf, fill="lightgrey") +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=0, fill="lightblue") +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
annotate("text", x=0.8,y=-36000/1000, label="CO[2]~Captured", size=3, angle=0, colour="dimgrey", parse=TRUE, hjust=0) +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
annotate("text", x=0.8,y=56000/1000, label="CO[2]~emitted", size=3, angle=0, colour="dimgrey", parse=TRUE, hjust=1) +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
#Baseline
geom_bar(data=CEMISrealsumcormutate[Variable %in% c("Biomass|Electricity","Biomass|Industry","Fossil|Industry","Fossil|Electricity") & Year %in% c("2030","2050") & Region %in% c("EU28","JAP", "CHN", "INDIA", "BRA", "CAN", "USA") & !Scenario=="Baseline"], aes(x=Region, y=Diff/1000, fill=Variable), stat="identity", position="stack", colour="black")+
#since 2010
geom_bar(data=CEMISrealsumcor[Variable %in% c("Industry", "Electricity", "Transportation", "Residential and Commercial") & Year %in% c("2030","2050") & Region %in% c("EU28", "JAP","CHN", "INDIA", "BRA", "CAN", "USA") & !Scenario=="Baseline"& value >= 0], aes(x=Region, y=value/1000, fill=Variable), stat="identity", position="stack", colour="black")+
geom_hline(yintercept=0, linetype=1, size=1) +
xlab("Region") + ylab(bquote("Gt"~CO[2])) + ggtitle(bquote(bold("Cumulative emitted and captured"~CO[2]~"emissions since 2015"))) +
coord_flip(ylim = c(-35:55))+
facet_grid(Year~Scenario, scales="free") +
GROBTHEME +
guides(fill=guide_legend( title="Emissions sink or source",ncol=2, title.position="top", title.hjust = 0)) +
theme(legend.position="bottom") +
scale_fill_manual(breaks=c("Biomass|Electricity", "Biomass|Industry", "Fossil|Electricity", "Fossil|Industry", "Fossil Fuels and Industry", "Industry", "Electricity", "Transportation", "Residential and Commercial"),
labels=c("BECCS (power sector)", "BECCS (Industry)", "CCS (Power Sector)", "CCS (Industry)", "Emissions whole economy", "Industry", "Electricity", "Transportation", "Residential and Commercial"),
values=c('#edf8fb','#b2e2e2','grey','#2ca25f','#006d2c', '#e66101','#fdb863','#c2a5cf','#7b3294'))
# theme(legend.position="bottom")+
# guides(colour=guide_legend(ncol=1,byrow=TRUE))
print(CUMUOFFSET)
png("figures/Cumu_emis_emit_captured_regions.png", width=600, height=600)
print(CUMUOFFSET)
dev.off()
ggsave("figures/Cumu_emis_emitcaptured_regions.pdf", width=7, height=5, unit="in")
########## World
CUMUOFFSETworld=ggplot()+
geom_bar(data=CEMISrealsumcormutate[Variable %in% c("Biomass|Electricity","Biomass|Industry","Fossil|Industry","Fossil|Electricity") & Year %in% c("2030","2050", "2100") & Region %in% c("World") & !Scenario=="Baseline" ], aes(x=as.factor(Year), y=Diff/1000, fill=Variable), stat="identity", position="stack", colour="black")+
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=Inf, fill="lightgrey") +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=0, fill="lightblue") +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
annotate("text", x=0.6,y=-76, label="CO[2]~Captured", size=3, angle=0, colour="dimgrey", parse=TRUE, hjust=0) +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
annotate("text", x=0.6,y=166, label="CO[2]~emitted", size=3, angle=0, colour="dimgrey", parse=TRUE, hjust=1) +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
# Since 2010
# geom_bar(data=CEMISrealsumcor[Variable %in% c("Kyoto Gases") & Year %in% c("2030","2050", "2100") & Region %in% c("World") & !Scenario=="Baseline" ], aes(x=as.factor(Year), y=value/1000, fill=Variable),   stat="identity", position="stack", colour="black")+
# Since Baseline
geom_bar(data=CEMISrealsumcormutate[Variable %in% c("Biomass|Electricity","Biomass|Industry", "Fossil|Electricity", "Fossil|Industry") & Year %in% c("2030","2050","2100") & Region %in% c("World" ) & !Scenario=="Baseline"], aes(x=as.factor(Year), y=Diff/1000, fill=Variable), stat="identity", position="stack", colour="black")+
# Since 2010
geom_bar(data=CEMISrealsumcor[Variable %in% c("Industry", "Electricity", "Transportation", "Residential and Commercial") & Year %in% c("2030","2050","2100") & Region %in% c( "World") & !Scenario=="Baseline"& value >= 0], aes(x=as.factor(Year), y=value/1000, fill=Variable), stat="identity", position="stack", colour="black")+
geom_hline(yintercept=0, linetype=1, size=1) +
xlab("Year") + ylab(bquote("Budget (Gt"~CO[2]*")")) + ggtitle(bquote(bold("Cumulative emitted and captured"~CO[2]~"emissions since 2010"))) +
coord_flip()+
facet_grid(Region~Scenario, scales="free") +
GROBTHEME +
guides(fill=guide_legend( title="Emissions sink or source",ncol=2, title.position="top", title.hjust = 0)) +
theme(legend.position="bottom") +
scale_fill_manual(breaks=c( "Kyoto Gases","Biomass|Electricity", "Biomass|Industry", "Fossil|Electricity", "Fossil|Industry", "Fossil Fuels and Industry", "Industry", "Electricity", "Transportation", "Residential and Commercial"),
labels=c("Kyoto Gases","BECCS (power sector)", "BECCS (Industry)", "Fossil|Electricity", "Fossil|Industry", "Emissions whole economy", "Industry", "Electricity", "Transportation", "Residential and Commercial"),
values=c('blue','lightgreen','grey','#2ca25f','#006d2c', '#e66101','#fdb863','#c2a5cf','#7b3294','grey88'))
# theme(legend.position="bottom")+
# guides(colour=guide_legend(ncol=1,byrow=TRUE))
print(CUMUOFFSETworld)
CUMUOFFSETworld=ggplot()+
geom_bar(data=CEMISrealsumcormutate[Variable %in% c("Biomass|Electricity","Biomass|Industry","Fossil|Industry","Fossil|Electricity") & Year %in% c("2030","2050", "2100") & Region %in% c("EU28") & !Scenario=="Baseline" ], aes(x=as.factor(Year), y=Diff/1000, fill=Variable), stat="identity", position="stack", colour="black")+
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=Inf, fill="lightgrey") +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=-Inf,ymax=0, fill="lightblue") +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
annotate("text", x=0.6,y=-76, label="CO[2]~Captured", size=3, angle=0, colour="dimgrey", parse=TRUE, hjust=0) +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
annotate("text", x=0.6,y=166, label="CO[2]~emitted", size=3, angle=0, colour="dimgrey", parse=TRUE, hjust=1) +  #geom_area(data=CEMISrealsumcor[Variable=="Fossil Fuels and Industry" & !Scenario=="Baseline" & Region %in% c("EU28", "World")], aes(x=as.numeric(Year), y=value, group=Variable,fill=Variable), position="stack")+
# Since 2010
# geom_bar(data=CEMISrealsumcor[Variable %in% c("Kyoto Gases") & Year %in% c("2030","2050", "2100") & Region %in% c("World") & !Scenario=="Baseline" ], aes(x=as.factor(Year), y=value/1000, fill=Variable),   stat="identity", position="stack", colour="black")+
# Since Baseline
geom_bar(data=CEMISrealsumcormutate[Variable %in% c("Biomass|Electricity","Biomass|Industry", "Fossil|Electricity", "Fossil|Industry") & Year %in% c("2030","2050","2100") & Region %in% c("EU28" ) & !Scenario=="Baseline"], aes(x=as.factor(Year), y=Diff/1000, fill=Variable), stat="identity", position="stack", colour="black")+
# Since 2010
geom_bar(data=CEMISrealsumcor[Variable %in% c("Industry", "Electricity", "Transportation", "Residential and Commercial") & Year %in% c("2030","2050","2100") & Region %in% c( "EU28") & !Scenario=="Baseline"& value >= 0], aes(x=as.factor(Year), y=value/1000, fill=Variable), stat="identity", position="stack", colour="black")+
geom_hline(yintercept=0, linetype=1, size=1) +
xlab("Year") + ylab(bquote("Budget (Gt"~CO[2]*")")) + ggtitle(bquote(bold("Cumulative emitted and captured"~CO[2]~"emissions since 2010"))) +
coord_flip()+
facet_grid(Region~Scenario, scales="free") +
GROBTHEME +
guides(fill=guide_legend( title="Emissions sink or source",ncol=2, title.position="top", title.hjust = 0)) +
theme(legend.position="bottom") +
scale_fill_manual(breaks=c( "Kyoto Gases","Biomass|Electricity", "Biomass|Industry", "Fossil|Electricity", "Fossil|Industry", "Fossil Fuels and Industry", "Industry", "Electricity", "Transportation", "Residential and Commercial"),
labels=c("Kyoto Gases","BECCS (power sector)", "BECCS (Industry)", "Fossil|Electricity", "Fossil|Industry", "Emissions whole economy", "Industry", "Electricity", "Transportation", "Residential and Commercial"),
values=c('blue','lightgreen','grey','#2ca25f','#006d2c', '#e66101','#fdb863','#c2a5cf','#7b3294','grey88'))
# theme(legend.position="bottom")+
# guides(colour=guide_legend(ncol=1,byrow=TRUE))
print(CUMUOFFSETworld)
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".")
ALLVAR=data.table(ALLVAR)
INDICATORS= ALLVAR[ Variable %in% c(
"Emissions|CO2|Iron and Steel|Direct emissions",
"Emissions|CO2|Pulp and Paper|Direct emissions",
"Emissions|CO2|Chemicals and Petrochemicals|Direct emissions",
"Emissions|CO2|Food Processing|Direct emissions",
"Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing",
"Production|Industry|Chemical|HVC|Total Demand",
"Production|Industry|Pulp and Paper|Total",
"Production|Industry|Iron and Steel|Crude Steel",
"Production|Industry|Food Processing|Total"
) ]
INDICATORS$Variable <- gsub("|Direct emissions", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("CO2|", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("Industry|", "", INDICATORS$Variable, fixed=T )
INDICATORSsplit<- data.frame(do.call('rbind', strsplit(as.character(INDICATORS$Variable),'|',fixed=TRUE)))
INDICATORS=cbind(INDICATORS,INDICATORSsplit$X1, INDICATORSsplit$X2)
INDICATORS$Variable <- NULL
setnames(INDICATORS, "V2", "Indicator")
setnames(INDICATORS, "V3", "Variable")
INDICATORS2015=INDICATORS[Year=="2015"]
INDICATORS=merge(INDICATORS, INDICATORS2015, by=c("Variable", "Indicator","Scenario", "Unit", "Model", "Region"), allow.cartesian = T)
INDICATORS=INDICATORS %>% mutate(RED=(1-(value.x/value.y))*100)
setnames(INDICATORS, "Variable", "Sector")
INDICATORS=data.table(INDICATORS)
INDICATORSminmax=INDICATORS[!Scenario=="Baseline",list(ymax=max(RED,na.rm = TRUE),ymin=min(RED,na.rm = TRUE)),by=c("Model", "Sector","Indicator", "Region", "Unit", "Year.x")]
INDICATORSminmax=INDICATORSminmax[Sector=="Chemicals", Sector:=c("Chemicals and Petrochemicals")]
options(digits=0)
###
MINMAXreg=ggplot()+
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2100)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
annotate("text", x=0.5,y=104, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.5, y=35, label="Reductions", size=3, angle=90, colour="dimgrey",  hjust=0) +
annotate("text", x=0.5, y=-5, label="Increase", size=3, angle=90, colour="dimgrey",  hjust=1) +
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2100)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Reduction \n ")+
facet_wrap(~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#ffffbf','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#ffffbf','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(-40:150)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
#print(MINMAXreg)
library("gganimate")
install.packages("gganimate")
install.packages("gifski")
install.packages("glue")
install.packages("glue")
install.packages("glue")
install.packages("glue")
# Clear memory
rm(list=ls()) # clear memory
# Clear memory
rm(list=ls()) # clear memory
install.packages("glue")
install.packages("glue")
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".")
ALLVAR=data.table(ALLVAR)
INDICATORS= ALLVAR[ Variable %in% c(
"Emissions|CO2|Iron and Steel|Direct emissions",
"Emissions|CO2|Pulp and Paper|Direct emissions",
"Emissions|CO2|Chemicals and Petrochemicals|Direct emissions",
"Emissions|CO2|Food Processing|Direct emissions",
"Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing",
"Production|Industry|Chemical|HVC|Total Demand",
"Production|Industry|Pulp and Paper|Total",
"Production|Industry|Iron and Steel|Crude Steel",
"Production|Industry|Food Processing|Total"
) ]
INDICATORS$Variable <- gsub("|Direct emissions", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("CO2|", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("Industry|", "", INDICATORS$Variable, fixed=T )
INDICATORSsplit<- data.frame(do.call('rbind', strsplit(as.character(INDICATORS$Variable),'|',fixed=TRUE)))
INDICATORS=cbind(INDICATORS,INDICATORSsplit$X1, INDICATORSsplit$X2)
INDICATORS$Variable <- NULL
setnames(INDICATORS, "V2", "Indicator")
setnames(INDICATORS, "V3", "Variable")
INDICATORS2015=INDICATORS[Year=="2015"]
INDICATORS=merge(INDICATORS, INDICATORS2015, by=c("Variable", "Indicator","Scenario", "Unit", "Model", "Region"), allow.cartesian = T)
INDICATORS=INDICATORS %>% mutate(RED=(1-(value.x/value.y))*100)
setnames(INDICATORS, "Variable", "Sector")
INDICATORS=data.table(INDICATORS)
INDICATORSminmax=INDICATORS[!Scenario=="Baseline",list(ymax=max(RED,na.rm = TRUE),ymin=min(RED,na.rm = TRUE)),by=c("Model", "Sector","Indicator", "Region", "Unit", "Year.x")]
INDICATORSminmax=INDICATORSminmax[Sector=="Chemicals", Sector:=c("Chemicals and Petrochemicals")]
options(digits=0)
###
MINMAXreg=ggplot()+
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2100)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
annotate("text", x=0.5,y=104, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.5, y=35, label="Reductions", size=3, angle=90, colour="dimgrey",  hjust=0) +
annotate("text", x=0.5, y=-5, label="Increase", size=3, angle=90, colour="dimgrey",  hjust=1) +
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2100)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Reduction \n ")+
facet_wrap(~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(-40:150)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
#print(MINMAXreg)
library("gganimate")
library("gifski")
install.packages("gifski")
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".")
ALLVAR=data.table(ALLVAR)
INDICATORS= ALLVAR[ Variable %in% c(
"Emissions|CO2|Iron and Steel|Direct emissions",
"Emissions|CO2|Pulp and Paper|Direct emissions",
"Emissions|CO2|Chemicals and Petrochemicals|Direct emissions",
"Emissions|CO2|Food Processing|Direct emissions",
"Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing",
"Production|Industry|Chemical|HVC|Total Demand",
"Production|Industry|Pulp and Paper|Total",
"Production|Industry|Iron and Steel|Crude Steel",
"Production|Industry|Food Processing|Total"
) ]
INDICATORS$Variable <- gsub("|Direct emissions", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("CO2|", "", INDICATORS$Variable, fixed=T )
INDICATORS$Variable <- gsub("Industry|", "", INDICATORS$Variable, fixed=T )
INDICATORSsplit<- data.frame(do.call('rbind', strsplit(as.character(INDICATORS$Variable),'|',fixed=TRUE)))
INDICATORS=cbind(INDICATORS,INDICATORSsplit$X1, INDICATORSsplit$X2)
INDICATORS$Variable <- NULL
setnames(INDICATORS, "V2", "Indicator")
setnames(INDICATORS, "V3", "Variable")
INDICATORS2015=INDICATORS[Year=="2015"]
INDICATORS=merge(INDICATORS, INDICATORS2015, by=c("Variable", "Indicator","Scenario", "Unit", "Model", "Region"), allow.cartesian = T)
INDICATORS=INDICATORS %>% mutate(RED=(1-(value.x/value.y))*100)
setnames(INDICATORS, "Variable", "Sector")
INDICATORS=data.table(INDICATORS)
INDICATORSminmax=INDICATORS[!Scenario=="Baseline",list(ymax=max(RED,na.rm = TRUE),ymin=min(RED,na.rm = TRUE)),by=c("Model", "Sector","Indicator", "Region", "Unit", "Year.x")]
INDICATORSminmax=INDICATORSminmax[Sector=="Chemicals", Sector:=c("Chemicals and Petrochemicals")]
options(digits=0)
###
MINMAXreg=ggplot()+
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2100)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
annotate("text", x=0.5,y=104, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.5, y=35, label="Reductions", size=3, angle=90, colour="dimgrey",  hjust=0) +
annotate("text", x=0.5, y=-5, label="Increase", size=3, angle=90, colour="dimgrey",  hjust=1) +
geom_crossbar(data=INDICATORSminmax[Year.x %in% c(2015:2100)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Reduction \n ")+
facet_wrap(~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(-40:150)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
#print(MINMAXreg)
library("gganimate")
library("gifski")
