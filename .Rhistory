ALLVARN20$value <- NULL
setnames(ALLVARN20, "GHG", "value")
ALLVAR=rbind(ALLVAR[!Variable=="Emissions|N2O|Energy|Demand|Industry"],ALLVARN20)
ALLVAR=ALLVAR[Scenario %in% c("SSP2_450"), Scenario:=c("2 Degrees")]
ALLVAR=ALLVAR[Scenario %in% c("SSP2_20"), Scenario:=c("1.5 Degrees")]
ALLVAR=ALLVAR[Scenario %in% c("SSP2"), Scenario:=c("Baseline")]
#Limiting number of regions to BRIC+USA
# ALLVAR=ALLVAR[Region %in% c("CHN", "BRA", "INDIA", "USA", "EU28","World")]
INDUSGHG=ALLVAR[Variable %in% c("Emissions|CH4|Energy Demand|Industry",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand|Industry",
"Emissions|N2O|Energy|Demand|Industry"), sum(value, na.rm=T), by=c("Region","Scenario", "Year",  "Model")]
INDUSGHG$Unit<- "MtCO2-eq/yr"
INDUSGHG$Variable <- "Emissions|GHG|Industry"
setnames(INDUSGHG, "V1", "value")
ALLVAR=rbind(ALLVAR, INDUSGHG)
ALLVAR=data.table(ALLVAR)
ALLVAR=ALLVAR[!duplicated(ALLVAR),]
ALLVARwidetab=spread(ALLVAR, Year, value)
write.table(ALLVARwidetab[Region %in% c("WEU", "CEU", "EU28")], file="Compilation_IMAGE_REINENT_everything_wide.csv", dec=".", sep=";", row.names=FALSE)
ALLVAR$Variable <- gsub("Production|Industry|", "", ALLVAR$Variable, fixed=TRUE)
write.table(ALLVAR[Region %in% c("BRA", "CHN", "EU28", "INDIA", "USA", "World")], file="Compilation_IMAGE_REINENT_everything.csv", dec=".", sep=";", row.names=FALSE)
# Clear memory
rm(list=ls()) # clear memory
####### Set working directory (all files should be in same level as script)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
############################################################################
# Requirements
# Plotting and transforming
setwd("../INDDEM/PAPER/")
source(file="../Libraries.R")                 ## Includes all necessary Libraries
source(file="../GROBTHEME.R")                 ## Standard formatting for graphs
#PR
############################################################################
########
LINETYPELEGEND=ggplot()+
geom_line(data=data.table(a=c(1,1,2,2), b=c(1,2,2,2), Scenario=c("1.5 Degrees", "2 Degrees","1.5 Degrees", "2 Degrees")),  aes(x=a, y=b, group=Scenario, linetype=Scenario), size=0.5)+
scale_linetype_manual(breaks=c("1.5 Degrees", "2 Degrees"), values=c(2,1)) + GROBTHEME
print(LINETYPELEGEND)
LINELEGEND.eu=ggplot()+
geom_line(data=data.table(a=c(1,1,2,2), b=c(1,2,2,2), Region=c("EU28", "Other","EU28", "Other")),  aes(x=a, y=b, group=Region, colour=Region), size=1)+
GROBTHEME +
scale_colour_manual(
values=c("grey","#e24848" ))
print(LINELEGEND.eu)
LINELEGEND=ggplot()+
geom_line(data=data.table(a=c(1,1,2,2,3,3), b=c(1,2,2,2,3,3), Region=c("EU28", "Other", "World", "EU28", "Other", "World")),  aes(x=a, y=b, group=Region, colour=Region), size=1)+
GROBTHEME +
scale_colour_manual(
values=c("#e24848","grey", "#08cec4" ))
print(LINELEGEND)
LINELEGENDEUWorld=ggplot()+
geom_line(data=data.table(a=c(1,1,2,2), b=c(1,2,2,2), Region=c("EU28", "World", "EU28", "World")),  aes(x=a, y=b, group=Region, colour=Region), size=1)+
GROBTHEME +
scale_colour_manual(
values=c("#e24848", "#08cec4" ))
print(LINELEGENDEUWorld)
get_legend<-function(myggplot){
tmp <- ggplot_gtable(ggplot_build(myggplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
legend.linetype <- get_legend(LINETYPELEGEND)
legend.linecolourEU <- get_legend(LINELEGEND.eu)
legend.linecolour <- get_legend(LINELEGEND)
legend.linecolourEUWorld <- get_legend(LINELEGENDEUWorld)
########
# Reading scenario data straightfrom the RT
#### Set TIMER output here
####### Set working directory (all files should be in same level as script)
setwd("/mnt/y/Kennisbasis/IMAGE/model/Timer/ontwapps_Timer/Users/Mariesse/TIMER/REINVENT/5_Reporting_Tool" )
SSP2_0= read.csv("SSP2_TIMER_2015.csv", sep=",", dec=".")
SSP2_450= read.csv("SSP2_450_TIMER_2015.csv", sep=",", dec=".")
SSP2_20= read.csv("SSP2_20_TIMER_2015.csv", sep=",", dec=".")
# SSP2_0= read.csv("SSP2_TIMER_3_11.csv", sep=",", dec=".")
# SSP2_450= read.csv("SSP2_450_TIMER_3_11.csv", sep=",", dec=".")
# SSP2_20= read.csv("SSP2_20_TIMER_3_11.csv", sep=",", dec=".")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
ALLSCEN=rbind(SSP2_0, SSP2_450, SSP2_20)
#Transform data to long-table
ALLSCEN0=melt(ALLSCEN,  id.vars=c("Model","Scenario","Region","Variable", "Unit"), variable.name="Year")
ALLSCEN0$Year = as.numeric(as.character(substr(ALLSCEN0$Year, 2, stop=100)))
ALLSCEN0$value = as.numeric(ALLSCEN0$value)
ALLSCEN0 <- na.omit(ALLSCEN0)
ALLSCEN0=data.table(ALLSCEN0)
## EU28
EU28data=ALLSCEN0[Region %in% c("WEU", "CEU"), sum(value, na.rm=T), by=c("Variable","Scenario", "Year", "Unit", "Model")]
EU28data$Region <- "EU28"
setnames(EU28data, "V1", "value")
EU28data=data.table(EU28data)
##NAFTA
NAFTAsum=ALLSCEN0[Region %in% c("MEX", "USA", "CAN"), sum(value, na.rm=T), by=c("Variable","Scenario", "Year", "Unit", "Model")]
NAFTAsum$Region <- "NAFTA"
setnames(NAFTAsum, "V1", "value")
NAFTAsum=data.table(NAFTAsum)
#
ALLVARworld=ALLSCEN0[!Region=="World", sum(value, na.rm=T), by=c("Variable","Scenario", "Year", "Unit", "Model")]
ALLVARworld$Region <- "World"
setnames(ALLVARworld, "V1", "value")
ALLVARworld=data.table(ALLVARworld)
##
ALLVAR=rbind(EU28data, NAFTAsum, ALLVARworld, ALLSCEN0[!Region=="World"])
ALLVARN20=ALLVAR[Variable=="Emissions|N2O|Energy|Demand|Industry"]
ALLVARN20 = ALLVARN20 %>% mutate(GHG=value*298)
ALLVARN20$value <- NULL
setnames(ALLVARN20, "GHG", "value")
ALLVAR=rbind(ALLVAR[!Variable=="Emissions|N2O|Energy|Demand|Industry"],ALLVARN20)
ALLVAR=ALLVAR[Scenario %in% c("SSP2_450"), Scenario:=c("2 Degrees")]
ALLVAR=ALLVAR[Scenario %in% c("SSP2_20"), Scenario:=c("1.5 Degrees")]
ALLVAR=ALLVAR[Scenario %in% c("SSP2"), Scenario:=c("Baseline")]
#Limiting number of regions to BRIC+USA
# ALLVAR=ALLVAR[Region %in% c("CHN", "BRA", "INDIA", "USA", "EU28","World")]
INDUSGHG=ALLVAR[Variable %in% c("Emissions|CH4|Energy Demand|Industry",
"Emissions|CO2|Fossil Fuels and Industry|Energy Demand|Industry",
"Emissions|N2O|Energy|Demand|Industry"), sum(value, na.rm=T), by=c("Region","Scenario", "Year",  "Model")]
INDUSGHG$Unit<- "MtCO2-eq/yr"
INDUSGHG$Variable <- "Emissions|GHG|Industry"
setnames(INDUSGHG, "V1", "value")
ALLVAR=rbind(ALLVAR, INDUSGHG)
ALLVAR=data.table(ALLVAR)
ALLVAR=ALLVAR[!duplicated(ALLVAR),]
ALLVARwidetab=spread(ALLVAR, Year, value)
write.table(ALLVARwidetab[Region %in% c("WEU", "CEU", "EU28")], file="Compilation_IMAGE_REINENT_everything_wide.csv", dec=".", sep=";", row.names=FALSE)
ALLVAR$Variable <- gsub("Production|Industry|", "", ALLVAR$Variable, fixed=TRUE)
write.table(ALLVAR[Region %in% c("BRA", "CHN", "EU28", "INDIA", "USA", "World")], file="Compilation_IMAGE_REINENT_everything.csv", dec=".", sep=";", row.names=FALSE)
write.table(ALLVAR[Region %in% c("BRA", "CHN", "EU28", "INDIA", "USA", "World")], file="Compilation_IMAGE_REINENT_everything.csv", dec=".", sep=";", row.names=FALSE)
setwd("/mnt/y/Kennisbasis/IMAGE/model/Timer/ontwapps_Timer/Users/Mariesse/R/REINVENT/DEVELOPMENT/Scenarios")
ALLVAR$Variable <- gsub("Production|Industry|", "", ALLVAR$Variable, fixed=TRUE)
write.table(ALLVAR[Region %in% c("BRA", "CHN", "EU28", "INDIA", "USA", "World")], file="Compilation_IMAGE_REINENT_everything.csv", dec=".", sep=";", row.names=FALSE)
STRATMINMAXreg=ggplot()+
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
# annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
# annotate("text", x=0.6,y=109, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.6, y=95, label="High use", size=3, angle=90, colour="dimgrey",  hjust=1) +
annotate("text", x=0.6, y=5, label="Low use", size=3, angle=90, colour="dimgrey",  hjust=0) +
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Application in total FE \n ")+
facet_wrap(Year~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(0:100)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(forcats)
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".", fileEncoding="latin1")
ALLVAR=data.table(ALLVAR)
####### IMAGE ONLY
FINETOTTAB=ALLVAR[Variable %in% c("Final Energy|Industry"
) & Year %in% c("2030", "2050") & Region=="EU28"]
FINETAB=ALLVAR[Variable %in% c("Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing"
) ]
FINETAB$Variable<- gsub("Final Energy|Industry|", "", FINETAB$Variable, fixed=T)
setnames(FINETAB, "Variable", "Sector")
ELECTRIFTAB=ALLVAR[Variable %in% c("Final Energy|Industry|Pulp and Paper|Electricity",
"Final Energy|Industry|Iron and Steel|Electricity",
"Final Energy|Industry|Chemicals and Petrochemicals|Electricity",
"Final Energy|Industry|Food Processing|Electricity"
) ]
ELECTRIFTAB$Indicator<-"Electrification"
BIOTAB=ALLVAR[Variable %in% c("Final Energy|Industry|Pulp and Paper|Modern Biofuel",
"Final Energy|Industry|Pulp and Paper|Secondary Heat",
"Final Energy|Industry|Iron and Steel|Modern Biofuel",
"Final Energy|Industry|Iron and Steel|Traditional Biofuel",
"Final Energy|Industry|Chemicals and Petrochemicals|Modern Biofuel",
"Final Energy|Industry|Chemicals and Petrochemicals|Traditional Biofuel",
"Final Energy|Industry|Food Processing|Modern Biofuel",
"Final Energy|Industry|Food Processing|Traditional Biofuel"
) ]
BIOTAB$Indicator <- "Biofuels"
FOSSILTAB= ALLVAR[ Variable %in% c(
"Final Energy|Industry|Chemicals and Petrochemicals|Coal",
"Final Energy|Industry|Chemicals and Petrochemicals|Liquid Fuel",
"Final Energy|Industry|Chemicals and Petrochemicals|Gaseous Fuel",
"Final Energy|Industry|Pulp and Paper|Coal",
"Final Energy|Industry|Pulp and Paper|Liquid Fuel",
"Final Energy|Industry|Pulp and Paper|Gaseous Fuel",
"Final Energy|Industry|Food Processing|Coal",
"Final Energy|Industry|Food Processing|Liquid Fuel",
"Final Energy|Industry|Food Processing|Gaseous Fuel",
"Final Energy|Industry|Iron and Steel|Coal",
"Final Energy|Industry|Iron and Steel|Liquid Fuel",
"Final Energy|Industry|Iron and Steel|Gaseous Fuel"
) ]
FOSSILTAB$Indicator <- "Fossil fuel"
ENERGYTABOVERVIEW <- rbind(ELECTRIFTAB,BIOTAB, FOSSILTAB)
ENERGYTABOVERVIEW$Variable <- gsub("Final Energy|Industry|","", ENERGYTABOVERVIEW$Variable, fixed=TRUE)
ENERGYTABOVERVIEWsplit= data.frame(do.call('rbind', strsplit(as.character(ENERGYTABOVERVIEW$Variable),'|',fixed=TRUE)))
ENERGYTABOVERVIEWnew=cbind(ENERGYTABOVERVIEW,ENERGYTABOVERVIEWsplit$X1, ENERGYTABOVERVIEWsplit$X2)
setnames(ENERGYTABOVERVIEWnew, "V2", "Sector")
setnames(ENERGYTABOVERVIEWnew, "V3", "Carrier")
ENERGYTABOVERVIEWnewsum=ENERGYTABOVERVIEWnew[, sum(value, na.rm=T), by=c("Scenario", "Year", "Region", "Sector","Indicator")]
ENERGYTABOVERVIEWnewsumcalc= merge(ENERGYTABOVERVIEWnewsum,FINETAB, by=c("Scenario", "Year", "Region", "Sector"))
ENERGYTABOVERVIEWnewsumcalc = ENERGYTABOVERVIEWnewsumcalc %>% mutate(Share=(V1/value)*100)
ENERGYTABOVERVIEWnewsumcalc$V1 <- NULL
ENERGYTABOVERVIEWnewsumcalc$value <- NULL
## Hijack
ENERGYTABOVERVIEWnewsumcalcplot=ENERGYTABOVERVIEWnewsumcalc
#/Hijack
#Hijack, taken from Row 4500 or something
ENERGYTABOVERVIEWnewsumcalcplot=data.table(ENERGYTABOVERVIEWnewsumcalcplot)
ENERGYTABOVERVIEWnewsumcalcplot2=ENERGYTABOVERVIEWnewsumcalcplot[!Scenario=="Baseline"]
ENERGYTABOVERVIEWnewsumcalcplot2minmax=ENERGYTABOVERVIEWnewsumcalcplot2[,list(ymax=max(Share,na.rm = TRUE),ymin=min(Share,na.rm = TRUE)),by=c("Model","Sector", "Indicator", "Year", "Region")]
ENERGYTABOVERVIEWnewsumcalcplot2minmax =ENERGYTABOVERVIEWnewsumcalcplot2minmax %>% mutate(Sector =
fct_relevel(Sector,
"Iron and Steel",
"Pulp and Paper",
"Chemicals and Petrochemicals",
"Food Processing"))
ENERGYTABOVERVIEWnewsumcalcplot2minmax=data.table(ENERGYTABOVERVIEWnewsumcalcplot2minmax)
###
STRATMINMAXreg=ggplot()+
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
# annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
# annotate("text", x=0.6,y=109, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.6, y=95, label="High use", size=3, angle=90, colour="dimgrey",  hjust=1) +
annotate("text", x=0.6, y=5, label="Low use", size=3, angle=90, colour="dimgrey",  hjust=0) +
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Application in total FE \n ")+
facet_wrap(Year~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(0:100)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
#print(STRATMINMAXreg)
#
# library("gganimate")
# library("gifski")
# library("glue")
#
# STRATMINMAXreg.animate <- STRATMINMAXreg +
#                 transition_time(Year) +
#                 labs(title = 'Year: {frame_time}')
# STRATMINMAXreg.animate
print(STRATMINMAXreg)
###
STRATMINMAXreg=ggplot()+
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
# annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
# annotate("text", x=0.6,y=109, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.6, y=95, label="High use", size=3, angle=90, colour="dimgrey",  hjust=1) +
annotate("text", x=0.6, y=5, label="Low use", size=3, angle=90, colour="dimgrey",  hjust=0) +
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Application in total FE \n ")+
facet_grid(Year~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(0:100)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
print(STRATMINMAXreg)
print(STRATMINMAXreg)
print(STRATMINMAXreg)
dev.off()
dev.off()
print(STRATMINMAXreg)
STRATMINMAXreg=ggplot()+
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
# annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
# annotate("text", x=0.6,y=109, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.6, y=95, label="High use", size=3, angle=90, colour="dimgrey",  hjust=1) +
annotate("text", x=0.6, y=5, label="Low use", size=3, angle=90, colour="dimgrey",  hjust=0) +
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Application in total FE \n ")+
facet_grid(Year~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(0:100)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
print(STRATMINMAXreg)
print(STRATMINMAXreg)
library(plotly)
library(ggplot2)
library(data.table)
library(dplyr)
library(tidyr)
library(forcats)
# IMAGE
ALLVAR=read.csv("data/Compilation_IMAGE_REINENT_everything.csv", sep=";", dec=".", fileEncoding="latin1")
ALLVAR=data.table(ALLVAR)
####### IMAGE ONLY
FINETOTTAB=ALLVAR[Variable %in% c("Final Energy|Industry"
) & Year %in% c("2030", "2050") & Region=="EU28"]
FINETAB=ALLVAR[Variable %in% c("Final Energy|Industry|Pulp and Paper",
"Final Energy|Industry|Iron and Steel",
"Final Energy|Industry|Chemicals and Petrochemicals",
"Final Energy|Industry|Food Processing"
) ]
FINETAB$Variable<- gsub("Final Energy|Industry|", "", FINETAB$Variable, fixed=T)
setnames(FINETAB, "Variable", "Sector")
ELECTRIFTAB=ALLVAR[Variable %in% c("Final Energy|Industry|Pulp and Paper|Electricity",
"Final Energy|Industry|Iron and Steel|Electricity",
"Final Energy|Industry|Chemicals and Petrochemicals|Electricity",
"Final Energy|Industry|Food Processing|Electricity"
) ]
ELECTRIFTAB$Indicator<-"Electrification"
BIOTAB=ALLVAR[Variable %in% c("Final Energy|Industry|Pulp and Paper|Modern Biofuel",
"Final Energy|Industry|Pulp and Paper|Secondary Heat",
"Final Energy|Industry|Iron and Steel|Modern Biofuel",
"Final Energy|Industry|Iron and Steel|Traditional Biofuel",
"Final Energy|Industry|Chemicals and Petrochemicals|Modern Biofuel",
"Final Energy|Industry|Chemicals and Petrochemicals|Traditional Biofuel",
"Final Energy|Industry|Food Processing|Modern Biofuel",
"Final Energy|Industry|Food Processing|Traditional Biofuel"
) ]
BIOTAB$Indicator <- "Biofuels"
FOSSILTAB= ALLVAR[ Variable %in% c(
"Final Energy|Industry|Chemicals and Petrochemicals|Coal",
"Final Energy|Industry|Chemicals and Petrochemicals|Liquid Fuel",
"Final Energy|Industry|Chemicals and Petrochemicals|Gaseous Fuel",
"Final Energy|Industry|Pulp and Paper|Coal",
"Final Energy|Industry|Pulp and Paper|Liquid Fuel",
"Final Energy|Industry|Pulp and Paper|Gaseous Fuel",
"Final Energy|Industry|Food Processing|Coal",
"Final Energy|Industry|Food Processing|Liquid Fuel",
"Final Energy|Industry|Food Processing|Gaseous Fuel",
"Final Energy|Industry|Iron and Steel|Coal",
"Final Energy|Industry|Iron and Steel|Liquid Fuel",
"Final Energy|Industry|Iron and Steel|Gaseous Fuel"
) ]
FOSSILTAB$Indicator <- "Fossil fuel"
ENERGYTABOVERVIEW <- rbind(ELECTRIFTAB,BIOTAB, FOSSILTAB)
ENERGYTABOVERVIEW$Variable <- gsub("Final Energy|Industry|","", ENERGYTABOVERVIEW$Variable, fixed=TRUE)
ENERGYTABOVERVIEWsplit= data.frame(do.call('rbind', strsplit(as.character(ENERGYTABOVERVIEW$Variable),'|',fixed=TRUE)))
ENERGYTABOVERVIEWnew=cbind(ENERGYTABOVERVIEW,ENERGYTABOVERVIEWsplit$X1, ENERGYTABOVERVIEWsplit$X2)
setnames(ENERGYTABOVERVIEWnew, "V2", "Sector")
setnames(ENERGYTABOVERVIEWnew, "V3", "Carrier")
ENERGYTABOVERVIEWnewsum=ENERGYTABOVERVIEWnew[, sum(value, na.rm=T), by=c("Scenario", "Year", "Region", "Sector","Indicator")]
ENERGYTABOVERVIEWnewsumcalc= merge(ENERGYTABOVERVIEWnewsum,FINETAB, by=c("Scenario", "Year", "Region", "Sector"))
ENERGYTABOVERVIEWnewsumcalc = ENERGYTABOVERVIEWnewsumcalc %>% mutate(Share=(V1/value)*100)
ENERGYTABOVERVIEWnewsumcalc$V1 <- NULL
ENERGYTABOVERVIEWnewsumcalc$value <- NULL
## Hijack
ENERGYTABOVERVIEWnewsumcalcplot=ENERGYTABOVERVIEWnewsumcalc
#/Hijack
#Hijack, taken from Row 4500 or something
ENERGYTABOVERVIEWnewsumcalcplot=data.table(ENERGYTABOVERVIEWnewsumcalcplot)
ENERGYTABOVERVIEWnewsumcalcplot2=ENERGYTABOVERVIEWnewsumcalcplot[!Scenario=="Baseline"]
ENERGYTABOVERVIEWnewsumcalcplot2minmax=ENERGYTABOVERVIEWnewsumcalcplot2[,list(ymax=max(Share,na.rm = TRUE),ymin=min(Share,na.rm = TRUE)),by=c("Model","Sector", "Indicator", "Year", "Region")]
ENERGYTABOVERVIEWnewsumcalcplot2minmax =ENERGYTABOVERVIEWnewsumcalcplot2minmax %>% mutate(Sector =
fct_relevel(Sector,
"Iron and Steel",
"Pulp and Paper",
"Chemicals and Petrochemicals",
"Food Processing"))
ENERGYTABOVERVIEWnewsumcalcplot2minmax=data.table(ENERGYTABOVERVIEWnewsumcalcplot2minmax)
###
STRATMINMAXreg=ggplot()+
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
#
annotate("rect", xmin=-Inf,xmax=Inf,ymin=0,ymax=100, fill="lightgrey", alpha=0.6) +
# annotate("rect", xmin=-Inf,xmax=Inf,ymin=100,ymax=Inf, fill="lightblue", alpha=0.6) +
# annotate("text", x=0.6,y=109, label="Net negative", size=3, angle=90, colour="dimgrey", hjust=0) +
annotate("text", x=0.6, y=95, label="High use", size=3, angle=90, colour="dimgrey",  hjust=1) +
annotate("text", x=0.6, y=5, label="Low use", size=3, angle=90, colour="dimgrey",  hjust=0) +
geom_crossbar(data=ENERGYTABOVERVIEWnewsumcalcplot2minmax[Year %in% c(2015,2030,2050)], aes(x=Sector, ymin=ymin, ymax=ymax, y=ymax, fill=Region, colour=Region), width=.7, position=position_dodge(width=0.7))+
geom_hline(yintercept=100)+
geom_hline(yintercept=0)+
ggtitle(bquote("Indexed change in 2050 compared to 2015")) +
xlab("\n \n \n \n Industry sector") + ylab("% Application in total FE \n ")+
facet_grid(Year~Indicator)+
scale_fill_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black'))+
scale_colour_manual(
breaks=c("BRA", "CHN", "EU28", "INDIA", "USA", "World"),
values=c('#d7191c','#fdae61','#2ca25f','#abd9e9','#2c7bb6', 'black')) +
guides(colour = element_blank()) +
scale_x_discrete(breaks=c("Iron and Steel", "Chemicals and Petrochemicals", "Pulp and Paper", "Food Processing"),
labels=c("Steel",  "Chemicals","Paper", "Food")) +
coord_cartesian(ylim=c(0:100)) +
theme_bw() +
theme(
axis.text.x = element_text(angle = 45, size=12,  hjust=1),
axis.title.y = element_text(size=13),
axis.title.x = element_text(size=13),
axis.text.y = element_text(size=12),
strip.text.x = element_text(size=12, face="bold"),
strip.text.y = element_text(size=12, face="bold"),
legend.text= element_text(size=12),
legend.title=element_text(size=13,  face="bold"),
plot.title=element_text(size=16, hjust=0.5, face="bold"),
plot.subtitle=element_text(size=14,hjust=0.5),
panel.border = element_rect(colour = "black", size=1),
legend.key =  element_rect(fill = 'white', size = 0.5),
strip.background = element_rect(colour="white", fill="#FFFFFF")
)
print(STRATMINMAXreg)
#
# library("gganimate")
# library("gifski")
# library("glue")
#
# STRATMINMAXreg.animate <- STRATMINMAXreg +
#                 transition_time(Year) +
#                 labs(title = 'Year: {frame_time}')
# STRATMINMAXreg.animate
print(STRATMINMAXreg)
